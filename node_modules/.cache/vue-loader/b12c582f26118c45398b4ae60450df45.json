{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/inline-x-switch/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/inline-x-switch/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/less-loader/dist/cjs.js","mtime":1592111419098},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import './style.less';\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/inline-x-switch","sourcesContent":["<template>\n  <input\n    class=\"inline-x-switch weui-switch\"\n    type=\"checkbox\"\n    :disabled=\"disabled\"\n    v-model=\"currentValue\"/>\n</template>\n\n<script>\nexport default {\n  name: 'x-switch',\n  methods: {\n    toBoolean (val) {\n      if (!this.valueMap) {\n        return val\n      } else {\n        const index = this.valueMap.indexOf(val)\n        return index === 1\n      }\n    },\n    toRaw (val) {\n      if (!this.valueMap) {\n        return val\n      } else {\n        return this.valueMap[val ? 1 : 0]\n      }\n    }\n  },\n  props: {\n    disabled: Boolean,\n    value: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    valueMap: {\n      type: Array,\n      default: () => ([false, true])\n    }\n  },\n  data () {\n    return {\n      currentValue: this.toBoolean(this.value)\n    }\n  },\n  watch: {\n    currentValue (val) {\n      const rawValue = this.toRaw(val)\n      this.$emit('input', rawValue)\n      this.$emit('on-change', rawValue)\n    },\n    value (val) {\n      this.currentValue = this.toBoolean(val)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import './style.less';\n</style>\n"]}]}