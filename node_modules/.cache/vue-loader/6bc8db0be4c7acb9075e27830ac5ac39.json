{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/countdown/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/countdown/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  name: 'countdown',\n  props: {\n    value: Number,\n    start: {\n      type: Boolean,\n      default: true\n    }\n  },\n  created () {\n    this.currentTime = this.time\n    if (this.value) this.currentTime = this.value\n  },\n  methods: {\n    tick () {\n      let _this = this\n      this.interval = setInterval(function () {\n        if (_this.currentTime > 0) {\n          _this.currentTime--\n        } else {\n          _this.stop()\n          _this.index++\n          _this.$emit('on-finish', _this.index)\n        }\n      }, 1000)\n    },\n    stop () {\n      clearInterval(this.interval)\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentTime = val\n    },\n    currentTime (val) {\n      this.$emit('input', val)\n    },\n    start (newVal, oldVal) {\n      if (newVal === true && oldVal === false && this.currentTime > 0) {\n        this.tick()\n      }\n      if (newVal === false && oldVal === true) {\n        this.stop()\n      }\n    }\n  },\n  mounted () {\n    if (this.start) {\n      this.tick()\n    }\n  },\n  data () {\n    return {\n      interval: null,\n      index: 0,\n      currentTime: 60\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/countdown","sourcesContent":["<template>\n  <span>{{currentTime}}</span>\n</template>\n\n<script>\nexport default {\n  name: 'countdown',\n  props: {\n    value: Number,\n    start: {\n      type: Boolean,\n      default: true\n    }\n  },\n  created () {\n    this.currentTime = this.time\n    if (this.value) this.currentTime = this.value\n  },\n  methods: {\n    tick () {\n      let _this = this\n      this.interval = setInterval(function () {\n        if (_this.currentTime > 0) {\n          _this.currentTime--\n        } else {\n          _this.stop()\n          _this.index++\n          _this.$emit('on-finish', _this.index)\n        }\n      }, 1000)\n    },\n    stop () {\n      clearInterval(this.interval)\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentTime = val\n    },\n    currentTime (val) {\n      this.$emit('input', val)\n    },\n    start (newVal, oldVal) {\n      if (newVal === true && oldVal === false && this.currentTime > 0) {\n        this.tick()\n      }\n      if (newVal === false && oldVal === true) {\n        this.stop()\n      }\n    }\n  },\n  mounted () {\n    if (this.start) {\n      this.tick()\n    }\n  },\n  data () {\n    return {\n      interval: null,\n      index: 0,\n      currentTime: 60\n    }\n  }\n}\n</script>"]}]}