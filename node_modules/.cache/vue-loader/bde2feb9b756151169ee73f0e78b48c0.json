{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/popup-picker/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/popup-picker/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/less-loader/dist/cjs.js","mtime":1592111419098},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '../../styles/variable.less';\n@import '../../styles/1px.less';\n\n.vux-cell-primary {\n  flex: 1;\n}\n.vux-cell-box {\n  position: relative;\n}\n.vux-cell-box:not(:first-child):before {\n  content: \" \";\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 1px;\n  border-top: 1px solid #D9D9D9;\n  color: #D9D9D9;\n  transform-origin: 0 0;\n  transform: scaleY(0.5);\n  left: 15px;\n}\n.vux-popup-picker-header {\n  height: 44px;\n  color: @popup-picker-header-text-color;\n  background-color: @popup-picker-header-bg-color;\n  font-size: @popup-picker-header-font-size;\n  position: relative;\n  &:after {\n    .setBottomLine(#e5e5e5);\n  }\n}\n.vux-popup-picker-value {\n  /* display: inline-block; */\n}\n.vux-popup-picker-header-menu {\n  text-align: left;\n  padding-left: 15px;\n  line-height: 44px;\n}\n.vux-popup-picker-header-menu-right {\n  text-align: right;\n  padding-right: 15px;\n}\n.vux-popup-picker-select {\n  width: 100%;\n  position: relative;\n}\n.vux-popup-picker-select-box.weui-cell__bd:after {\n  content: \" \";\n  display: inline-block;\n  transform: rotate(45deg);\n  height: 6px;\n  width: 6px;\n  border-width: 2px 2px 0 0;\n  border-color: #C8C8CD;\n  border-style: solid;\n  position: relative;\n  top: -2px;\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  margin-top: -3px;\n}\n.vux-popup-picker-cancel {\n  color: @popup-picker-header-cancel-text-color;\n}\n.vux-popup-picker-placeholder {\n  color: #999;\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoPA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/popup-picker","sourcesContent":["<template>\n  <div class=\"vux-cell-box\">\n    <div class=\"weui-cell vux-tap-active\" :class=\"{'weui-cell_access': !disabled}\" @click=\"onClick\" v-show=\"showCell\">\n      <div class=\"weui-cell__hd\">\n        <slot name=\"title\" label-class=\"weui-label\" :label-style=\"labelStyles\" :label-title=\"title\">\n          <label class=\"weui-label\" :class=\"labelClass\" :style=\"labelStyles\" v-if=\"title\" v-html=\"title\"></label>\n        </slot>\n        <inline-desc v-if=\"inlineDesc\">{{ inlineDesc }}</inline-desc>\n      </div>\n      <div class=\"vux-cell-primary vux-popup-picker-select-box\">\n        <div class=\"vux-popup-picker-select\" :style=\"{textAlign: valueTextAlign}\">\n          <span class=\"vux-popup-picker-value vux-cell-value\" v-if=\"!displayFormat && !showName && value.length\">{{value | array2string}}</span>\n          <span class=\"vux-popup-picker-value vux-cell-value\" v-if=\"!displayFormat && showName && value.length\">{{value | value2name(data)}}</span>\n          <span class=\"vux-popup-picker-value vux-cell-value\" v-if=\"displayFormat && value.length\">{{ displayFormat(value, value2name(value, data)) }}</span>\n          <span v-if=\"!value.length && placeholder\" v-text=\"placeholder\" class=\"vux-popup-picker-placeholder vux-cell-placeholder\"></span>\n        </div>\n      </div>\n      <div class=\"weui-cell__ft\">\n      </div>\n    </div>\n\n    <div v-transfer-dom=\"isTransferDom\">\n      <popup\n      v-model=\"showValue\"\n      class=\"vux-popup-picker\"\n      :id=\"`vux-popup-picker-${uuid}`\"\n      @on-hide=\"onPopupHide\"\n      @on-show=\"onPopupShow\"\n      :popup-style=\"popupStyle\">\n        <div class=\"vux-popup-picker-container\">\n          <popup-header\n          :left-text=\"cancelText || $t('cancel_text')\"\n          :right-text=\"confirmText || $t('confirm_text')\"\n          @on-click-left=\"onHide(false)\"\n          @on-click-right=\"onHide(true)\"\n          :title=\"popupTitle\"></popup-header>\n          <picker\n          :data=\"data\"\n          v-model=\"tempValue\"\n          @on-change=\"onPickerChange\"\n          :columns=\"columns\"\n          :fixed-columns=\"fixedColumns\"\n          :container=\"'#vux-popup-picker-'+uuid\"\n          :column-width=\"columnWidth\"></picker>\n        </div>\n      </popup>\n    </div>\n\n  </div>\n</template>\n\n<i18n>\ncancel_text:\n  en: cancel\n  zh-CN: 取消\nconfirm_text:\n  en: ok\n  zh-CN: 完成\n</i18n>\n\n<script>\nimport Picker from '../picker'\nimport Cell from '../cell'\nimport Popup from '../popup'\nimport PopupHeader from '../popup-header'\nimport InlineDesc from '../inline-desc'\nimport { Flexbox, FlexboxItem } from '../flexbox'\nimport array2string from '../../filters/array2String'\nimport value2name from '../../filters/value2name'\nimport uuidMixin from '../../libs/mixin_uuid'\nimport TransferDom from '../../directives/transfer-dom'\n\nconst getObject = function (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nexport default {\n  name: 'popup-picker',\n  directives: {\n    TransferDom\n  },\n  created () {\n    if (typeof this.show !== 'undefined') {\n      this.showValue = this.show\n    }\n  },\n  mixins: [uuidMixin],\n  components: {\n    Picker,\n    Cell,\n    Popup,\n    PopupHeader,\n    Flexbox,\n    FlexboxItem,\n    InlineDesc\n  },\n  filters: {\n    array2string,\n    value2name\n  },\n  props: {\n    valueTextAlign: {\n      type: String,\n      default: 'right'\n    },\n    title: String,\n    cancelText: String,\n    confirmText: String,\n    data: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    placeholder: String,\n    columns: {\n      type: Number,\n      default: 0\n    },\n    fixedColumns: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    showName: Boolean,\n    inlineDesc: [String, Number, Array, Object, Boolean],\n    showCell: {\n      type: Boolean,\n      default: true\n    },\n    show: Boolean,\n    displayFormat: Function,\n    isTransferDom: {\n      type: Boolean,\n      default: true\n    },\n    columnWidth: Array,\n    popupStyle: Object,\n    popupTitle: String,\n    disabled: Boolean\n  },\n  computed: {\n    labelStyles () {\n      return {\n        display: 'block',\n        width: (this.$parent && (this.$parent.labelWidth || this.$parent.$parent.labelWidth)) || 'auto',\n        textAlign: this.$parent && (this.$parent.labelAlign || this.$parent.$parent.labelAlign),\n        marginRight: this.$parent && (this.$parent.labelMarginRight || this.$parent.$parent.labelMarginRight)\n      }\n    },\n    labelClass () {\n      return {\n        'vux-cell-justify': this.$parent && (this.$parent.labelAlign === 'justify' || this.$parent.$parent.labelAlign === 'justify')\n      }\n    }\n  },\n  methods: {\n    value2name,\n    getNameValues () {\n      return value2name(this.currentValue, this.data)\n    },\n    onClick () {\n      if (!this.disabled) {\n        this.showValue = true\n      }\n    },\n    onHide (type) {\n      this.showValue = false\n      if (type) {\n        this.closeType = true\n        this.currentValue = getObject(this.tempValue)\n      }\n      if (!type) {\n        this.closeType = false\n        if (this.value.length > 0) {\n          this.tempValue = getObject(this.currentValue)\n        }\n      }\n    },\n    onPopupShow () {\n      // reset close type to false\n      this.closeType = false\n      this.$emit('on-show')\n    },\n    onPopupHide (val) {\n      if (this.value.length > 0) {\n        this.tempValue = getObject(this.currentValue)\n      }\n      this.$emit('on-hide', this.closeType)\n    },\n    onPickerChange (val) {\n      if (JSON.stringify(this.currentValue) !== JSON.stringify(val)) {\n        // if has value, replace it\n        if (this.value.length) {\n          const nowData = JSON.stringify(this.data)\n          if (nowData !== this.currentData && this.currentData !== '[]') {\n            this.tempValue = getObject(val)\n          }\n          this.currentData = nowData\n        } else { // if no value, stay quiet\n          // if set to auto update, do update the value\n        }\n      }\n      const _val = getObject(val)\n      this.$emit('on-shadow-change', _val, value2name(_val, this.data).split(' '))\n    }\n  },\n  watch: {\n    value (val) {\n      if (JSON.stringify(val) !== JSON.stringify(this.tempValue)) {\n        this.tempValue = getObject(val)\n        this.currentValue = getObject(val)\n      }\n    },\n    currentValue (val) {\n      this.$emit('input', getObject(val))\n      this.$emit('on-change', getObject(val))\n    },\n    show (val) {\n      this.showValue = val\n    },\n    showValue (val) {\n      this.$emit('update:show', val)\n    }\n  },\n  data () {\n    return {\n      onShowProcess: false,\n      tempValue: getObject(this.value),\n      closeType: false,\n      currentData: JSON.stringify(this.data), // used for detecting if it is after data change\n      showValue: false,\n      currentValue: this.value\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../../styles/variable.less';\n@import '../../styles/1px.less';\n\n.vux-cell-primary {\n  flex: 1;\n}\n.vux-cell-box {\n  position: relative;\n}\n.vux-cell-box:not(:first-child):before {\n  content: \" \";\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 1px;\n  border-top: 1px solid #D9D9D9;\n  color: #D9D9D9;\n  transform-origin: 0 0;\n  transform: scaleY(0.5);\n  left: 15px;\n}\n.vux-popup-picker-header {\n  height: 44px;\n  color: @popup-picker-header-text-color;\n  background-color: @popup-picker-header-bg-color;\n  font-size: @popup-picker-header-font-size;\n  position: relative;\n  &:after {\n    .setBottomLine(#e5e5e5);\n  }\n}\n.vux-popup-picker-value {\n  /* display: inline-block; */\n}\n.vux-popup-picker-header-menu {\n  text-align: left;\n  padding-left: 15px;\n  line-height: 44px;\n}\n.vux-popup-picker-header-menu-right {\n  text-align: right;\n  padding-right: 15px;\n}\n.vux-popup-picker-select {\n  width: 100%;\n  position: relative;\n}\n.vux-popup-picker-select-box.weui-cell__bd:after {\n  content: \" \";\n  display: inline-block;\n  transform: rotate(45deg);\n  height: 6px;\n  width: 6px;\n  border-width: 2px 2px 0 0;\n  border-color: #C8C8CD;\n  border-style: solid;\n  position: relative;\n  top: -2px;\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  margin-top: -3px;\n}\n.vux-popup-picker-cancel {\n  color: @popup-picker-header-cancel-text-color;\n}\n.vux-popup-picker-placeholder {\n  color: #999;\n}\n</style>\n"]}]}