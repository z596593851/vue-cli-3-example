{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/search/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/search/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport uuidMixin from '../../mixins/uuid'\n\nexport default {\n  name: 'search',\n  mixins: [uuidMixin],\n  props: {\n    required: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: String,\n    cancelText: String,\n    value: {\n      type: String,\n      default: ''\n    },\n    results: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    autoFixed: {\n      type: Boolean,\n      default: true\n    },\n    top: {\n      type: String,\n      default: '0px'\n    },\n    position: {\n      type: String,\n      default: 'fixed'\n    },\n    autoScrollToTop: Boolean\n  },\n  created () {\n    if (this.value) {\n      this.currentValue = this.value\n    }\n  },\n  computed: {\n    fixPosition () {\n      if (this.isFixed) {\n        return this.position === 'absolute' ? 'absolute' : 'fixed'\n      }\n      return 'static'\n    }\n  },\n  methods: {\n    emitEvent () {\n      this.$nextTick(() => {\n        this.$emit('input', this.currentValue)\n        this.$emit('on-change', this.currentValue)\n      })\n    },\n    onComposition ($event, type) {\n      if (type === 'start') {\n        this.onInput = true\n      }\n      if (type === 'end') {\n        this.onInput = false\n        this.emitEvent()\n      }\n      if (type === 'input') {\n        if (!this.onInput) {\n          this.emitEvent()\n        }\n      }\n    },\n    clear () {\n      this.currentValue = ''\n      this.emitEvent()\n      this.isFocus = true\n      this.setFocus()\n      if (this.autoFixed && !this.isFixed) {\n        this.isFixed = true\n      }\n      this.$emit('on-clear')\n    },\n    cancel () {\n      this.isCancel = true\n      this.currentValue = ''\n      this.emitEvent()\n      this.isFixed = false\n      this.$emit('on-cancel')\n    },\n    handleResultClick (item) {\n      this.$emit('result-click', item) // just for compatibility\n      this.$emit('on-result-click', item)\n      this.isCancel = true\n      this.isFixed = false\n    },\n    touch () {\n      this.isCancel = false\n      if (this.autoFixed) {\n        this.isFixed = true\n      }\n      this.$emit('on-touch')\n    },\n    setFocus () {\n      this.$refs.input.focus()\n    },\n    setBlur () {\n      this.$refs.input.blur()\n    },\n    onFocus () {\n      this.isFocus = true\n      this.$emit('on-focus')\n      this.touch()\n    },\n    onBlur () {\n      this.isFocus = false\n      this.$emit('on-blur')\n    }\n  },\n  data () {\n    return {\n      onInput: false,\n      currentValue: '',\n      isCancel: true,\n      isFocus: false,\n      isFixed: false\n    }\n  },\n  watch: {\n    isFixed (val) {\n      if (val === true) {\n        this.setFocus()\n        this.isFocus = true\n\n        if (this.autoScrollToTop) {\n          setTimeout(() => {\n            window.scrollTo(0, 0)\n          }, 150)\n        }\n      } else {}\n    },\n    value (val) {\n      this.currentValue = val\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/vux/src/components/search","sourcesContent":["<template>\n  <div\n    class=\"vux-search-box\"\n    :class=\"{ 'vux-search-fixed':isFixed }\"\n    :style=\"{ top: isFixed ? top : '', position: fixPosition }\">\n    <div\n      class=\"weui-search-bar\"\n      :class=\"{'weui-search-bar_focusing': !isCancel || currentValue}\">\n      <slot name=\"left\"></slot>\n      <form class=\"weui-search-bar__form\" @submit.prevent=\"$emit('on-submit', value)\" action=\".\">\n        <label\n          :for=\"`search_input_${uuid}`\"\n          class=\"vux-search-mask\"\n          @click=\"touch\"\n          v-show=\"!isFixed && autoFixed\"></label>\n        <div class=\"weui-search-bar__box\">\n          <i class=\"weui-icon-search\"></i>\n          <input\n            v-model=\"currentValue\"\n            ref=\"input\"\n            type=\"search\"\n            autocomplete=\"off\"\n            class=\"weui-search-bar__input\"\n            :id=\"`search_input_${uuid}`\"\n            :placeholder=\"placeholder\"\n            :required=\"required\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @compositionstart=\"onComposition($event, 'start')\"\n            @compositionend=\"onComposition($event, 'end')\"\n            @input=\"onComposition($event, 'input')\"/>\n          <a\n            href=\"javascript:\"\n            class=\"weui-icon-clear\"\n            @click=\"clear\"\n            v-show=\"currentValue\"></a>\n        </div>\n        <label\n          :for=\"`search_input_${uuid}`\"\n          class=\"weui-search-bar__label\"\n          v-show=\"!isFocus && !value\">\n          <i class=\"weui-icon-search\"></i>\n          <span>{{ placeholder || $t('placeholder') }}</span>\n        </label>\n      </form>\n      <a\n        href=\"javascript:\"\n        class=\"weui-search-bar__cancel-btn\"\n        @click=\"cancel\">{{ cancelText || $t('cancel_text') }}\n      </a>\n      <slot name=\"right\"></slot>\n    </div>\n    <div class=\"weui-cells vux-search_show\" v-show=\"isFixed\">\n      <slot></slot>\n      <div\n        class=\"weui-cell weui-cell_access\"\n        v-for=\"item in results\"\n        @click=\"handleResultClick(item)\">\n        <div class=\"weui-cell__bd weui-cell_primary\">\n          <p>{{item.title}}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<i18n>\ncancel_text:\n  en: cancel\n  zh-CN: 取消\nplaceholder:\n  en: Search\n  zh-CN: 搜索\n</i18n>\n\n<script>\nimport uuidMixin from '../../mixins/uuid'\n\nexport default {\n  name: 'search',\n  mixins: [uuidMixin],\n  props: {\n    required: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: String,\n    cancelText: String,\n    value: {\n      type: String,\n      default: ''\n    },\n    results: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    autoFixed: {\n      type: Boolean,\n      default: true\n    },\n    top: {\n      type: String,\n      default: '0px'\n    },\n    position: {\n      type: String,\n      default: 'fixed'\n    },\n    autoScrollToTop: Boolean\n  },\n  created () {\n    if (this.value) {\n      this.currentValue = this.value\n    }\n  },\n  computed: {\n    fixPosition () {\n      if (this.isFixed) {\n        return this.position === 'absolute' ? 'absolute' : 'fixed'\n      }\n      return 'static'\n    }\n  },\n  methods: {\n    emitEvent () {\n      this.$nextTick(() => {\n        this.$emit('input', this.currentValue)\n        this.$emit('on-change', this.currentValue)\n      })\n    },\n    onComposition ($event, type) {\n      if (type === 'start') {\n        this.onInput = true\n      }\n      if (type === 'end') {\n        this.onInput = false\n        this.emitEvent()\n      }\n      if (type === 'input') {\n        if (!this.onInput) {\n          this.emitEvent()\n        }\n      }\n    },\n    clear () {\n      this.currentValue = ''\n      this.emitEvent()\n      this.isFocus = true\n      this.setFocus()\n      if (this.autoFixed && !this.isFixed) {\n        this.isFixed = true\n      }\n      this.$emit('on-clear')\n    },\n    cancel () {\n      this.isCancel = true\n      this.currentValue = ''\n      this.emitEvent()\n      this.isFixed = false\n      this.$emit('on-cancel')\n    },\n    handleResultClick (item) {\n      this.$emit('result-click', item) // just for compatibility\n      this.$emit('on-result-click', item)\n      this.isCancel = true\n      this.isFixed = false\n    },\n    touch () {\n      this.isCancel = false\n      if (this.autoFixed) {\n        this.isFixed = true\n      }\n      this.$emit('on-touch')\n    },\n    setFocus () {\n      this.$refs.input.focus()\n    },\n    setBlur () {\n      this.$refs.input.blur()\n    },\n    onFocus () {\n      this.isFocus = true\n      this.$emit('on-focus')\n      this.touch()\n    },\n    onBlur () {\n      this.isFocus = false\n      this.$emit('on-blur')\n    }\n  },\n  data () {\n    return {\n      onInput: false,\n      currentValue: '',\n      isCancel: true,\n      isFocus: false,\n      isFixed: false\n    }\n  },\n  watch: {\n    isFixed (val) {\n      if (val === true) {\n        this.setFocus()\n        this.isFocus = true\n\n        if (this.autoScrollToTop) {\n          setTimeout(() => {\n            window.scrollTo(0, 0)\n          }, 150)\n        }\n      } else {}\n    },\n    value (val) {\n      this.currentValue = val\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../../styles/weui/icon/weui_icon_font';\n@import '../../styles/weui/widget/weui_searchbar/weui_searchbar';\n@import '../../styles/weui/widget/weui_cell/weui_cell_global';\n@import '../../styles/weui/widget/weui_cell/weui_access';\n\n.vux-search-fixed {\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 5;\n  background: rgba(255, 255, 255, 1);\n  backdrop-filter: blur(5px);\n}\n.vux-search-box {\n  width: 100%;\n}\n.weui-cells.vux-search_show {\n  margin-top: 0!important;\n  overflow-y: auto;\n  position: fixed;\n  width: 100%;\n  max-height: 100%;\n\n  .weui-cell:last-child {\n    margin-bottom: 150px;\n  }\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  &::after {\n    display: none;\n  }\n}\n.vux-search-mask {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 90%;\n  height: 100%;\n  z-index: 5;\n}\n</style>\n"]}]}