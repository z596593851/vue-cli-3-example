{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/x-switch/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/x-switch/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport InlineDesc from '../inline-desc'\nimport cleanStyle from '../../libs/clean-style'\n\nexport default {\n  name: 'x-switch',\n  components: {\n    InlineDesc\n  },\n  computed: {\n    parent () {\n      const {$parent} = this\n      return $parent || {}\n    },\n    labelStyle () {\n      let isHTML = /<\\/?[^>]*>/.test(this.title)\n      let width = Math.min(isHTML ? 5 : (this.title.length + 1), 14) + 'em'\n      return cleanStyle({\n        display: 'block',\n        width: this.parent.labelWidth || width,\n        textAlign: this.parent.labelAlign\n      })\n    },\n    labelClass () {\n      return {\n        'vux-cell-justify': this.parent.labelAlign === 'justify'\n      }\n    }\n  },\n  methods: {\n    onClick () {\n      this.$emit('on-click', !this.currentValue, this.currentValue)\n    },\n    toBoolean (val) {\n      if (!this.valueMap) {\n        return val\n      } else {\n        const index = this.valueMap.indexOf(val)\n        return index === 1\n      }\n    },\n    toRaw (val) {\n      if (!this.valueMap) {\n        return val\n      } else {\n        return this.valueMap[val ? 1 : 0]\n      }\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    disabled: Boolean,\n    value: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    inlineDesc: [String, Boolean, Number],\n    preventDefault: Boolean,\n    valueMap: {\n      type: Array,\n      default: () => ([false, true])\n    }\n  },\n  data () {\n    return {\n      currentValue: this.toBoolean(this.value)\n    }\n  },\n  watch: {\n    currentValue (val) {\n      const rawValue = this.toRaw(val)\n      this.$emit('input', rawValue)\n      this.$emit('on-change', rawValue)\n    },\n    value (val) {\n      this.currentValue = this.toBoolean(val)\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/x-switch","sourcesContent":["<template>\n  <div class=\"vux-x-switch weui-cell weui-cell_switch\">\n    <div class=\"weui-cell__bd\">\n      <label class=\"weui-label\" :style=\"labelStyle\" :class=\"labelClass\" v-html=\"title\"></label>\n      <inline-desc v-if=\"inlineDesc\">{{ inlineDesc }}</inline-desc>\n    </div>\n    <div class=\"weui-cell__ft\">\n      <input class=\"weui-switch\" type=\"checkbox\" :disabled=\"disabled\" v-model=\"currentValue\" />\n      <div v-if=\"preventDefault\" class=\"vux-x-switch-overlay\" @click=\"onClick\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InlineDesc from '../inline-desc'\nimport cleanStyle from '../../libs/clean-style'\n\nexport default {\n  name: 'x-switch',\n  components: {\n    InlineDesc\n  },\n  computed: {\n    parent () {\n      const {$parent} = this\n      return $parent || {}\n    },\n    labelStyle () {\n      let isHTML = /<\\/?[^>]*>/.test(this.title)\n      let width = Math.min(isHTML ? 5 : (this.title.length + 1), 14) + 'em'\n      return cleanStyle({\n        display: 'block',\n        width: this.parent.labelWidth || width,\n        textAlign: this.parent.labelAlign\n      })\n    },\n    labelClass () {\n      return {\n        'vux-cell-justify': this.parent.labelAlign === 'justify'\n      }\n    }\n  },\n  methods: {\n    onClick () {\n      this.$emit('on-click', !this.currentValue, this.currentValue)\n    },\n    toBoolean (val) {\n      if (!this.valueMap) {\n        return val\n      } else {\n        const index = this.valueMap.indexOf(val)\n        return index === 1\n      }\n    },\n    toRaw (val) {\n      if (!this.valueMap) {\n        return val\n      } else {\n        return this.valueMap[val ? 1 : 0]\n      }\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    disabled: Boolean,\n    value: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    inlineDesc: [String, Boolean, Number],\n    preventDefault: Boolean,\n    valueMap: {\n      type: Array,\n      default: () => ([false, true])\n    }\n  },\n  data () {\n    return {\n      currentValue: this.toBoolean(this.value)\n    }\n  },\n  watch: {\n    currentValue (val) {\n      const rawValue = this.toRaw(val)\n      this.$emit('input', rawValue)\n      this.$emit('on-change', rawValue)\n    },\n    value (val) {\n      this.currentValue = this.toBoolean(val)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../inline-x-switch/style.less';\n</style>\n\n"]}]}