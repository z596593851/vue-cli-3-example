{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/masker/index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/masker/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.vux-masker-box {\n  position: relative;\n}\n.vux-masker {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  border-radius: inherit;\n}\n.vux-masker-fullscreen {\n  position: fixed;\n  z-index: 10001;\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/masker","sourcesContent":["<template>\n  <div class=\"vux-masker-box\">\n    <slot></slot>\n    <div class=\"vux-masker\" :class=\"{'vux-masker-fullscreen': fullscreen}\" :style=\"style\">\n      <slot name=\"content\"></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { toRGB } from './converter'\n\nexport default {\n  name: 'masker',\n  props: {\n    color: {\n      type: String,\n      default: '0, 0, 0'\n    },\n    opacity: {\n      type: Number,\n      default: 0.5\n    },\n    fullscreen: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    style () {\n      let color = /,/.test(this.color) ? this.color : toRGB(this.color.replace('#', '')).join(',')\n      return {\n        backgroundColor: `rgba(${color},${this.opacity})`\n      }\n    }\n  }\n}\n</script>\n\n<style>\n.vux-masker-box {\n  position: relative;\n}\n.vux-masker {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  border-radius: inherit;\n}\n.vux-masker-fullscreen {\n  position: fixed;\n  z-index: 10001;\n}\n</style>\n"]}]}