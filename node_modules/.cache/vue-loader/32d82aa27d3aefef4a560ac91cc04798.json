{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/qrcode/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/qrcode/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport QRCodeImpl from 'qr.js/lib/QRCode'\nimport ErrorCorrectLevel from 'qr.js/lib/ErrorCorrectLevel'\n\nexport default {\n  name: 'qrcode',\n  props: {\n    value: String,\n    size: {\n      type: Number,\n      default: 160\n    },\n    level: {\n      type: String,\n      default: 'L'\n    },\n    bgColor: {\n      type: String,\n      default: '#FFFFFF'\n    },\n    fgColor: {\n      type: String,\n      default: '#000000'\n    },\n    type: {\n      type: String,\n      default: 'img'\n    }\n  },\n  mounted () {\n    this.$nextTick(() => {\n      this.render()\n    })\n  },\n  data () {\n    return {\n      imgData: ''\n    }\n  },\n  watch: {\n    value () {\n      this.render()\n    },\n    size () {\n      this.render()\n    },\n    level () {\n      this.render()\n    },\n    bgColor () {\n      this.render()\n    },\n    fgColor () {\n      this.render()\n    }\n  },\n  methods: {\n    render () {\n      if (typeof this.value === 'undefined') {\n        return\n      }\n\n      const qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[this.level])\n      qrcode.addData(utf16to8(this.value))\n      qrcode.make()\n\n      const canvas = this.$refs.canvas\n\n      const ctx = canvas.getContext('2d')\n      const cells = qrcode.modules\n      const tileW = this.size / cells.length\n      const tileH = this.size / cells.length\n      const scale = (window.devicePixelRatio || 1) / getBackingStorePixelRatio(ctx)\n      canvas.height = canvas.width = this.size * scale\n      ctx.scale(scale, scale)\n\n      cells.forEach((row, rdx) => {\n        row.forEach((cell, cdx) => {\n          ctx.fillStyle = cell ? this.fgColor : this.bgColor\n          const w = (Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW))\n          const h = (Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH))\n          ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h)\n        })\n      })\n      if (this.type === 'img') {\n        this.imgData = canvas.toDataURL('image/png')\n      }\n    }\n  }\n}\n\nfunction getBackingStorePixelRatio (ctx) {\n  return (\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.msBackingStorePixelRatio ||\n    ctx.oBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1\n  )\n}\n\nfunction utf16to8 (str) {\n  var out, i, len, c\n  out = ''\n  len = str.length\n  for (i = 0; i < len; i++) {\n    c = str.charCodeAt(i)\n    if ((c >= 0x0001) && (c <= 0x007F)) {\n      out += str.charAt(i)\n    } else if (c > 0x07FF) {\n      out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F))\n      out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F))\n      out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F))\n    } else {\n      out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F))\n      out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F))\n    }\n  }\n  return out\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"node_modules/vux/src/components/qrcode","sourcesContent":["<template>\n  <div>\n    <canvas\n    :style=\"{\n      height: `${size}px`,\n      width: `${size}px`\n    }\"\n    :height=\"size\"\n    :width=\"size\"\n    v-show=\"type === 'canvas'\"\n    ref=\"canvas\"></canvas>\n    <img\n    :src=\"imgData\"\n    v-if=\"type === 'img'\"\n    :style=\"{\n      height: `${size}px`,\n      width: `${size}px`\n    }\">\n  </div>\n</template>\n\n<script>\nimport QRCodeImpl from 'qr.js/lib/QRCode'\nimport ErrorCorrectLevel from 'qr.js/lib/ErrorCorrectLevel'\n\nexport default {\n  name: 'qrcode',\n  props: {\n    value: String,\n    size: {\n      type: Number,\n      default: 160\n    },\n    level: {\n      type: String,\n      default: 'L'\n    },\n    bgColor: {\n      type: String,\n      default: '#FFFFFF'\n    },\n    fgColor: {\n      type: String,\n      default: '#000000'\n    },\n    type: {\n      type: String,\n      default: 'img'\n    }\n  },\n  mounted () {\n    this.$nextTick(() => {\n      this.render()\n    })\n  },\n  data () {\n    return {\n      imgData: ''\n    }\n  },\n  watch: {\n    value () {\n      this.render()\n    },\n    size () {\n      this.render()\n    },\n    level () {\n      this.render()\n    },\n    bgColor () {\n      this.render()\n    },\n    fgColor () {\n      this.render()\n    }\n  },\n  methods: {\n    render () {\n      if (typeof this.value === 'undefined') {\n        return\n      }\n\n      const qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[this.level])\n      qrcode.addData(utf16to8(this.value))\n      qrcode.make()\n\n      const canvas = this.$refs.canvas\n\n      const ctx = canvas.getContext('2d')\n      const cells = qrcode.modules\n      const tileW = this.size / cells.length\n      const tileH = this.size / cells.length\n      const scale = (window.devicePixelRatio || 1) / getBackingStorePixelRatio(ctx)\n      canvas.height = canvas.width = this.size * scale\n      ctx.scale(scale, scale)\n\n      cells.forEach((row, rdx) => {\n        row.forEach((cell, cdx) => {\n          ctx.fillStyle = cell ? this.fgColor : this.bgColor\n          const w = (Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW))\n          const h = (Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH))\n          ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h)\n        })\n      })\n      if (this.type === 'img') {\n        this.imgData = canvas.toDataURL('image/png')\n      }\n    }\n  }\n}\n\nfunction getBackingStorePixelRatio (ctx) {\n  return (\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.msBackingStorePixelRatio ||\n    ctx.oBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1\n  )\n}\n\nfunction utf16to8 (str) {\n  var out, i, len, c\n  out = ''\n  len = str.length\n  for (i = 0; i < len; i++) {\n    c = str.charCodeAt(i)\n    if ((c >= 0x0001) && (c <= 0x007F)) {\n      out += str.charAt(i)\n    } else if (c > 0x07FF) {\n      out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F))\n      out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F))\n      out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F))\n    } else {\n      out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F))\n      out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F))\n    }\n  }\n  return out\n}\n</script>\n"]}]}