{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/calendar/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/calendar/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/less-loader/dist/cjs.js","mtime":1592111419098},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '../../styles/weui/base/fn';\n@import '../../styles/weui/base/mixin/setOnepx.less';\n\n.vux-calendar {\n  position: relative;\n  &:before {\n    .setTopLine(@weuiCellBorderColor);\n    left: @weuiCellGapH;\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/calendar","sourcesContent":["<template>\n  <div class=\"vux-calendar\">\n    <cell\n      :title=\"title\"\n      primary=\"content\"\n      @click.native=\"onClick\"\n      :is-link=\"!readonly\">\n      <span class=\"vux-cell-placeholder\" v-if=\"shouldShowPlaceholder\">{{ placeholder }}</span>\n      <span class=\"vux-cell-value\" v-if=\"!shouldShowPlaceholder\">{{ displayFormat(value, getType(value)) }}</span>\n    </cell>\n    <div v-transfer-dom=\"shouldTransferDom\">\n      <popup\n        v-model=\"show\"\n        @on-show=\"onPopupShow\"\n        @on-hide=\"onPopupHide\">\n\n        <popup-header\n          v-if=\"shouldConfirm\"\n          @on-click-left=\"onClickLeft\"\n          @on-click-right=\"onClickRight\"\n          :title=\"popupHeaderTitle\"\n          :left-text=\"$t('cancel_text')\"\n          :right-text=\"$t('confirm_text')\"></popup-header>\n\n        <slot name=\"popup-before-calendar\"></slot>\n\n        <inline-calendar\n          v-model=\"currentValue\"\n          @on-change=\"onCalendarValueChange\"\n          @on-select-single-date=\"onSelectSingleDate\"\n          :render-month=\"renderMonth\"\n          :start-date=\"startDate\"\n          :end-date=\"endDate\"\n          :show-last-month=\"showLastMonth\"\n          :show-next-month=\"showNextMonth\"\n          :highlight-weekend=\"highlightWeekend\"\n          :return-six-rows=\"returnSixRows\"\n          :hide-header=\"hideHeader\"\n          :hide-week-list=\"hideWeekList\"\n          :replace-text-list=\"replaceTextList\"\n          :weeks-list=\"weeksList\"\n          :render-function=\"renderFunction\"\n          :render-on-value-change=\"renderOnValueChange\"\n          :disable-past=\"disablePast\"\n          :disable-future=\"disableFuture\"\n          :marks=\"marks\"\n          :disable-weekend=\"disableWeekend\"\n          :disable-date-function=\"disableDateFunction\"\n        ></inline-calendar>\n\n      </popup>\n    </div>\n  </div>\n</template>\n\n<i18n>\ncancel_text:\n  en: cancel\n  zh-CN: 取消\nconfirm_text:\n  en: done\n  zh-CN: 确定\n</i18n>\n\n<script>\nimport InlineCalendar from '../inline-calendar'\nimport Popup from '../popup'\nimport Cell from '../cell'\nimport props from '../inline-calendar/props'\nimport TransferDom from '../../directives/transfer-dom'\nimport PopupHeader from '../popup-header'\nimport format from '../../tools/date/format'\n\nconst getType = (value) => {\n  if (typeof value === 'string') {\n    return 'string'\n  }\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return 'array'\n  }\n}\n\nconst pure = function (value) {\n  const type = getType(value)\n  if (type === 'string') {\n    return value\n  } else if (type === 'array') {\n    return JSON.parse(JSON.stringify(value))\n  }\n}\n\nconst Props = {\n  ...props(),\n  title: {\n    type: String,\n    required: true\n  },\n  placeholder: String,\n  showPopupHeader: Boolean,\n  popupHeaderTitle: String,\n  displayFormat: {\n    type: Function,\n    default: (value) => {\n      return typeof value === 'string' ? value : value.join(', ')\n    }\n  },\n  // for test only\n  shouldTransferDom: {\n    type: Boolean,\n    default: true\n  },\n  readonly: Boolean\n}\n\nexport default {\n  name: 'calendar',\n  directives: {\n    TransferDom\n  },\n  components: {\n    InlineCalendar,\n    Popup,\n    PopupHeader,\n    Cell\n  },\n  computed: {\n    shouldConfirm () {\n      return this.showPopupHeader || this.getType(this.value) === 'array'\n    },\n    shouldShowPlaceholder () {\n      if (typeof this.value === 'string' && !this.value) {\n        return true\n      }\n      if (getType(this.value) === 'array' && !this.value.length) {\n        return true\n      }\n      return false\n    }\n  },\n  created () {\n    if (this.value === 'TODAY') {\n      this.currentValue = format(new Date(), 'YYYY-MM-DD')\n      this.$emit('input', this.currentValue)\n    } else {\n      if (this.getType(this.value) === 'string') {\n        this.currentValue = this.value\n      } else {\n        this.currentValue = pure(this.value)\n      }\n    }\n  },\n  props: Props,\n  methods: {\n    onPopupShow () {\n      this.$emit('on-show')\n    },\n    onPopupHide () {\n      this.$emit('on-hide')\n      // reset value to show value\n      this.currentValue = pure(this.value)\n    },\n    getType,\n    onClickLeft () {\n      this.show = false\n      this.currentValue = pure(this.value)\n    },\n    onClickRight () {\n      this.show = false\n      const value = pure(this.currentValue)\n      this.$emit('input', value)\n    },\n    onClick () {\n      if (!this.readonly) {\n        this.show = true\n      }\n    },\n    onCalendarValueChange (val) {\n      if (!this.shouldConfirm) {\n        this.show = false\n        this.$emit('input', pure(val))\n      }\n    },\n    onSelectSingleDate () {\n      if (!this.shouldConfirm) {\n        this.show = false\n      }\n    }\n  },\n  watch: {\n    value (newVal, oldVal) {\n      if (this.getType(this.value) === 'string') {\n        this.currentValue = newVal\n        this.$emit('on-change', newVal)\n      } else {\n        if (JSON.stringify(newVal) !== JSON.stringify(oldVal)) {\n          this.$emit('on-change', pure(newVal))\n        }\n        this.currentValue = pure(newVal)\n      }\n    }\n  },\n  data () {\n    return {\n      show: false,\n      currentValue: ''\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../../styles/weui/base/fn';\n@import '../../styles/weui/base/mixin/setOnepx.less';\n\n.vux-calendar {\n  position: relative;\n  &:before {\n    .setTopLine(@weuiCellBorderColor);\n    left: @weuiCellGapH;\n  }\n}\n</style>"]}]}