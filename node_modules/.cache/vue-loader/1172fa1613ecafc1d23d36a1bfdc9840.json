{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/swiper/swiper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/swiper/swiper.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Swiper from './swiper.js'\nimport { go } from '../../libs/router'\n\nexport default {\n  name: 'swiper',\n  created () {\n    this.index = this.value || 0\n    if (this.index) {\n      this.current = this.index\n    }\n  },\n  mounted () {\n    this.hasTwoLoopItem()\n    this.$nextTick(() => {\n      if (!(this.list && this.list.length === 0)) {\n        this.render(this.index)\n      }\n      this.xheight = this.getHeight()\n      this.$emit('on-get-height', this.xheight)\n    })\n  },\n  methods: {\n    hasTwoLoopItem () {\n      if (this.list.length === 2 && this.loop) {\n        this.listTwoLoopItem = this.list\n      } else {\n        this.listTwoLoopItem = []\n      }\n    },\n    clickListItem (item) {\n      go(item.url, this.$router)\n      this.$emit('on-click-list-item', JSON.parse(JSON.stringify(item)))\n    },\n    buildBackgroundUrl (item) {\n      return item.fallbackImg ? `url(${item.img}), url(${item.fallbackImg})` : `url(${item.img})`\n    },\n    render (index = 0) {\n      this.swiper && this.swiper.destroy()\n      this.swiper = new Swiper({\n        container: this.$el,\n        direction: this.direction,\n        auto: this.auto,\n        loop: this.loop,\n        interval: this.interval,\n        threshold: this.threshold,\n        duration: this.duration,\n        height: this.height || this._height,\n        minMovingDistance: this.minMovingDistance,\n        imgList: this.imgList\n      })\n      .on('swiped', (prev, index) => {\n        this.current = index % this.length\n        this.index = index % this.length\n      })\n      if (index > 0) {\n        this.swiper.go(index)\n      }\n    },\n    rerender () {\n      if (!this.$el || this.hasRender) {\n        return\n      }\n      this.hasRender = true\n      this.hasTwoLoopItem()\n      this.$nextTick(() => {\n        this.index = this.value || 0\n        this.current = this.value || 0\n        this.length = this.list.length || this.$children.length\n        this.destroy()\n        this.render(this.value)\n      })\n    },\n    destroy () {\n      this.hasRender = false\n      this.swiper && this.swiper.destroy()\n    },\n    getHeight () {\n      const hasHeight = parseInt(this.height, 10)\n      if (hasHeight) return this.height\n      if (!hasHeight) {\n        if (this.aspectRatio) {\n          return this.$el.offsetWidth * this.aspectRatio + 'px'\n        }\n        return '180px'\n      }\n    }\n  },\n  props: {\n    list: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    direction: {\n      type: String,\n      default: 'horizontal'\n    },\n    showDots: {\n      type: Boolean,\n      default: true\n    },\n    showDescMask: {\n      type: Boolean,\n      default: true\n    },\n    dotsPosition: {\n      type: String,\n      default: 'right'\n    },\n    dotsClass: String,\n    auto: Boolean,\n    loop: Boolean,\n    interval: {\n      type: Number,\n      default: 3000\n    },\n    threshold: {\n      type: Number,\n      default: 50\n    },\n    duration: {\n      type: Number,\n      default: 300\n    },\n    height: {\n      type: String,\n      default: 'auto'\n    },\n    aspectRatio: Number,\n    minMovingDistance: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n  data () {\n    return {\n      hasRender: false,\n      current: this.index || 0,\n      xheight: 'auto',\n      length: this.list.length,\n      index: 0,\n      listTwoLoopItem: [] // issue #1484\n    }\n  },\n  watch: {\n    auto (val) {\n      if (!val) {\n        this.swiper && this.swiper.stop()\n      } else {\n        this.swiper && this.swiper._auto()\n      }\n    },\n    list (val, oldVal) {\n      if (JSON.stringify(val) !== JSON.stringify(oldVal)) {\n        this.rerender()\n      }\n    },\n    current (currentIndex) {\n      this.index = currentIndex\n      this.$emit('on-index-change', currentIndex)\n    },\n    index (val) {\n      const _this = this\n      if (val !== this.current) {\n        this.$nextTick(() => {\n          _this.swiper && _this.swiper.go(val)\n        })\n      }\n      this.$emit('input', val)\n    },\n    value (val) {\n      this.index = val\n    }\n  },\n  beforeDestroy () {\n    this.destroy()\n  }\n}\n\n",{"version":3,"sources":["swiper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"swiper.vue","sourceRoot":"node_modules/vux/src/components/swiper","sourcesContent":["<template>\n  <div class=\"vux-slider\">\n    <div class=\"vux-swiper\" :style=\"{height: xheight}\">\n      <slot></slot>\n\n      <div\n      class=\"vux-swiper-item\"\n      v-for=\"(item, index) in list\"\n      @click=\"clickListItem(item)\"\n      :data-index=\"index\">\n        <a href=\"javascript:\">\n          <div class=\"vux-img\" :style=\"{backgroundImage: buildBackgroundUrl(item)}\"></div>\n          <p class=\"vux-swiper-desc\" v-if=\"showDescMask\">{{ item.title }}</p>\n        </a>\n      </div>\n\n      <div\n      v-if=\"listTwoLoopItem.length > 0\"\n      class=\"vux-swiper-item vux-swiper-item-clone\"\n      v-for=\"(item, index) in listTwoLoopItem\"\n      @click=\"clickListItem(item)\"\n      :data-index=\"index\">\n        <a href=\"javascript:\">\n          <div class=\"vux-img\" :style=\"{backgroundImage: buildBackgroundUrl(item)}\"></div>\n          <p class=\"vux-swiper-desc\" v-if=\"showDescMask\">{{ item.title }}</p>\n        </a>\n      </div>\n\n    </div>\n    <div :class=\"[dotsClass, 'vux-indicator', `vux-indicator-${dotsPosition}`]\" v-show=\"showDots\">\n      <a href=\"javascript:\" v-for=\"key in length\">\n        <i class=\"vux-icon-dot\" :class=\"{'active': key - 1 === current}\"></i>\n      </a>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Swiper from './swiper.js'\nimport { go } from '../../libs/router'\n\nexport default {\n  name: 'swiper',\n  created () {\n    this.index = this.value || 0\n    if (this.index) {\n      this.current = this.index\n    }\n  },\n  mounted () {\n    this.hasTwoLoopItem()\n    this.$nextTick(() => {\n      if (!(this.list && this.list.length === 0)) {\n        this.render(this.index)\n      }\n      this.xheight = this.getHeight()\n      this.$emit('on-get-height', this.xheight)\n    })\n  },\n  methods: {\n    hasTwoLoopItem () {\n      if (this.list.length === 2 && this.loop) {\n        this.listTwoLoopItem = this.list\n      } else {\n        this.listTwoLoopItem = []\n      }\n    },\n    clickListItem (item) {\n      go(item.url, this.$router)\n      this.$emit('on-click-list-item', JSON.parse(JSON.stringify(item)))\n    },\n    buildBackgroundUrl (item) {\n      return item.fallbackImg ? `url(${item.img}), url(${item.fallbackImg})` : `url(${item.img})`\n    },\n    render (index = 0) {\n      this.swiper && this.swiper.destroy()\n      this.swiper = new Swiper({\n        container: this.$el,\n        direction: this.direction,\n        auto: this.auto,\n        loop: this.loop,\n        interval: this.interval,\n        threshold: this.threshold,\n        duration: this.duration,\n        height: this.height || this._height,\n        minMovingDistance: this.minMovingDistance,\n        imgList: this.imgList\n      })\n      .on('swiped', (prev, index) => {\n        this.current = index % this.length\n        this.index = index % this.length\n      })\n      if (index > 0) {\n        this.swiper.go(index)\n      }\n    },\n    rerender () {\n      if (!this.$el || this.hasRender) {\n        return\n      }\n      this.hasRender = true\n      this.hasTwoLoopItem()\n      this.$nextTick(() => {\n        this.index = this.value || 0\n        this.current = this.value || 0\n        this.length = this.list.length || this.$children.length\n        this.destroy()\n        this.render(this.value)\n      })\n    },\n    destroy () {\n      this.hasRender = false\n      this.swiper && this.swiper.destroy()\n    },\n    getHeight () {\n      const hasHeight = parseInt(this.height, 10)\n      if (hasHeight) return this.height\n      if (!hasHeight) {\n        if (this.aspectRatio) {\n          return this.$el.offsetWidth * this.aspectRatio + 'px'\n        }\n        return '180px'\n      }\n    }\n  },\n  props: {\n    list: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    direction: {\n      type: String,\n      default: 'horizontal'\n    },\n    showDots: {\n      type: Boolean,\n      default: true\n    },\n    showDescMask: {\n      type: Boolean,\n      default: true\n    },\n    dotsPosition: {\n      type: String,\n      default: 'right'\n    },\n    dotsClass: String,\n    auto: Boolean,\n    loop: Boolean,\n    interval: {\n      type: Number,\n      default: 3000\n    },\n    threshold: {\n      type: Number,\n      default: 50\n    },\n    duration: {\n      type: Number,\n      default: 300\n    },\n    height: {\n      type: String,\n      default: 'auto'\n    },\n    aspectRatio: Number,\n    minMovingDistance: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n  data () {\n    return {\n      hasRender: false,\n      current: this.index || 0,\n      xheight: 'auto',\n      length: this.list.length,\n      index: 0,\n      listTwoLoopItem: [] // issue #1484\n    }\n  },\n  watch: {\n    auto (val) {\n      if (!val) {\n        this.swiper && this.swiper.stop()\n      } else {\n        this.swiper && this.swiper._auto()\n      }\n    },\n    list (val, oldVal) {\n      if (JSON.stringify(val) !== JSON.stringify(oldVal)) {\n        this.rerender()\n      }\n    },\n    current (currentIndex) {\n      this.index = currentIndex\n      this.$emit('on-index-change', currentIndex)\n    },\n    index (val) {\n      const _this = this\n      if (val !== this.current) {\n        this.$nextTick(() => {\n          _this.swiper && _this.swiper.go(val)\n        })\n      }\n      this.$emit('input', val)\n    },\n    value (val) {\n      this.index = val\n    }\n  },\n  beforeDestroy () {\n    this.destroy()\n  }\n}\n\n</script>\n\n<style lang=\"less\">\n@import '../../styles/variable.less';\n\n@pre: vux;\n\n.@{pre}-slider {\n  overflow: hidden;\n  position: relative;\n\n  > .@{pre}-indicator, .@{pre}-indicator-right {\n    position: absolute;\n    right: 15px;\n    bottom: 10px;\n\n    > a {\n      float: left;\n      margin-left: 6px;\n\n      > .@{pre}-icon-dot {\n        display: inline-block;\n        vertical-align: middle;\n        width: 6px;\n        height: 6px;\n        border-radius: 3px;\n        background-color: #d0cdd1;\n      }\n      > .@{pre}-icon-dot.active {\n        background-color: @swiper-indicator-active-color;\n      }\n\n    }\n  }\n\n  > .@{pre}-indicator-center {\n    right: 50%;\n    transform: translateX(50%)\n  }\n\n  > .@{pre}-indicator-left {\n    left: 15px;\n    right: auto;\n  }\n\n  > .@{pre}-swiper {\n    overflow: hidden;\n    position: relative;\n\n    > .@{pre}-swiper-item {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n\n      > a {\n        display: block;\n        width: 100%;\n        height: 100%;\n\n        > .@{pre}-img {\n          display: block;\n          width: 100%;\n          height: 100%;\n          background: center center no-repeat;\n          background-size: cover;\n        }\n\n        > .@{pre}-swiper-desc {\n          position: absolute;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          height: 1.4em;\n          font-size: 16px;\n          padding: 20px 50px 12px 13px;\n          margin: 0;\n          background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, .7) 100%);\n          color: #fff;\n          text-shadow: 0 1px 0 rgba(0, 0, 0, .5);\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          word-wrap: normal;\n        }\n\n      }\n    }\n  }\n}\n</style>\n"]}]}