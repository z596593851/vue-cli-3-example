{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/clocker/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/clocker/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport Clocker from './clocker'\n\nlet format = '%D 天 %H 小时 %M 分 %S 秒'\n\nif (typeof V_LOCALE === 'undefined') {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn('[VUX warn] 抱歉，clocker 组件需要升级 vux-loader 到最新版本才能正常使用')\n  }\n} else {\n  if (V_LOCALE === 'en') { // eslint-disable-line\n    format = '%D d %H h %M m %S s'\n  } else if (V_LOCALE === 'zh-CN') { // eslint-disable-line\n    format = '%D 天 %H 小时 %M 分 %S 秒'\n  }\n}\n\nexport default {\n  name: 'clocker',\n  mounted () {\n    this.$nextTick(() => {\n      this.slot = this.$el.querySelector('.vux-clocker-tpl')\n      this.slotString = this.slot.innerHTML\n      if (this.slotString !== '') {\n        this.showTimeString = false\n      }\n      this.render()\n    })\n  },\n  methods: {\n    render () {\n      if (!this.time) return\n      this.clocker = new Clocker(this.time)\n      .on('tick', event => {\n        this.update(event)\n        this.$emit('on-tick', event)\n      })\n      .on('finish', () => {\n        this.timeString = '00:00:00'\n        this.$emit('on-finish')\n      })\n      .start()\n    },\n    update (event) {\n      if (this.showTimeString) {\n        this.timeString = event.strftime(this.format)\n      } else {\n        let string = event.strftime(this.slotString)\n        if (string !== this.cacheSlotString) {\n          this.slot.innerHTML = this.cacheSlotString = string\n        }\n      }\n    }\n  },\n  props: {\n    time: [String, Number],\n    format: {\n      type: String,\n      default: format\n    }\n  },\n  watch: {\n    time () {\n      this.clocker && this.clocker.remove()\n      this.render()\n    }\n  },\n  data () {\n    return {\n      showTimeString: true,\n      timeString: '',\n      slotString: '',\n      cacheSlotString: ''\n    }\n  },\n  beforeDestroy () {\n    if (this.clocker) {\n      this.clocker.remove()\n      this.clocker = null\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/clocker","sourcesContent":["<template>\n  <div style=\"display:inline-block;\">\n    <span v-if=\"showTimeString\">{{timeString}}</span>\n    <div class=\"vux-clocker-tpl\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nimport Clocker from './clocker'\n\nlet format = '%D 天 %H 小时 %M 分 %S 秒'\n\nif (typeof V_LOCALE === 'undefined') {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn('[VUX warn] 抱歉，clocker 组件需要升级 vux-loader 到最新版本才能正常使用')\n  }\n} else {\n  if (V_LOCALE === 'en') { // eslint-disable-line\n    format = '%D d %H h %M m %S s'\n  } else if (V_LOCALE === 'zh-CN') { // eslint-disable-line\n    format = '%D 天 %H 小时 %M 分 %S 秒'\n  }\n}\n\nexport default {\n  name: 'clocker',\n  mounted () {\n    this.$nextTick(() => {\n      this.slot = this.$el.querySelector('.vux-clocker-tpl')\n      this.slotString = this.slot.innerHTML\n      if (this.slotString !== '') {\n        this.showTimeString = false\n      }\n      this.render()\n    })\n  },\n  methods: {\n    render () {\n      if (!this.time) return\n      this.clocker = new Clocker(this.time)\n      .on('tick', event => {\n        this.update(event)\n        this.$emit('on-tick', event)\n      })\n      .on('finish', () => {\n        this.timeString = '00:00:00'\n        this.$emit('on-finish')\n      })\n      .start()\n    },\n    update (event) {\n      if (this.showTimeString) {\n        this.timeString = event.strftime(this.format)\n      } else {\n        let string = event.strftime(this.slotString)\n        if (string !== this.cacheSlotString) {\n          this.slot.innerHTML = this.cacheSlotString = string\n        }\n      }\n    }\n  },\n  props: {\n    time: [String, Number],\n    format: {\n      type: String,\n      default: format\n    }\n  },\n  watch: {\n    time () {\n      this.clocker && this.clocker.remove()\n      this.render()\n    }\n  },\n  data () {\n    return {\n      showTimeString: true,\n      timeString: '',\n      slotString: '',\n      cacheSlotString: ''\n    }\n  },\n  beforeDestroy () {\n    if (this.clocker) {\n      this.clocker.remove()\n      this.clocker = null\n    }\n  }\n}\n</script>\n"]}]}