{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/popover/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/popover/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ClickOutside from '../../directives/click-outside'\nimport TransferDom from '../../directives/transfer-dom'\n\nexport default {\n  name: 'popover',\n  mounted () {\n    this.$nextTick(() => {\n      this.init()\n      window.addEventListener('resize', this.reset)\n    })\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.reset)\n  },\n  directives: {\n    TransferDom,\n    ClickOutside\n  },\n  props: {\n    content: String,\n    placement: String,\n    gutter: {\n      type: Number,\n      default: 5\n    }\n  },\n  methods: {\n    reset () {\n      if (this.show) {\n        this.init(true)\n      }\n    },\n    init (isReset) {\n      const trigger = this.$refs.trigger.children[0]\n      const popover = this.$refs.popover\n      const scrollTop = window.pageYOffset ||\n                    document.documentElement.scrollTop ||\n                    document.body.scrollTop\n      switch (this.placement) {\n        case 'top' :\n          this.position.left = trigger.offsetLeft - popover.offsetWidth / 2 + trigger.offsetWidth / 2\n          this.position.top = scrollTop + trigger.getBoundingClientRect().top - popover.offsetHeight - this.gutter\n          break\n        case 'left':\n          this.position.left = trigger.offsetLeft - popover.offsetWidth - this.gutter\n          this.position.top = scrollTop + trigger.getBoundingClientRect().top + trigger.offsetHeight / 2 - popover.offsetHeight / 2\n          break\n        case 'right':\n          this.position.left = trigger.offsetLeft + trigger.offsetWidth + this.gutter\n          this.position.top = scrollTop + trigger.getBoundingClientRect().top + trigger.offsetHeight / 2 - popover.offsetHeight / 2\n          break\n        case 'bottom':\n          this.position.left = trigger.offsetLeft - popover.offsetWidth / 2 + trigger.offsetWidth / 2\n          this.position.top = scrollTop + trigger.getBoundingClientRect().top + trigger.offsetHeight + this.gutter\n          break\n        default:\n          console.warn('Wrong placement prop')\n      }\n      if (!isReset) {\n        this.show = false\n      }\n\n      this.popoverStyle = {\n        top: this.position.top + 'px',\n        left: this.position.left + 'px',\n        display: isReset ? this.popoverStyle.display : 'none'\n      }\n    },\n    onClickedOutside () {\n      if (this.show) {\n        this.show = false\n        this.$emit('on-hide')\n      }\n    },\n    toggle () {\n      this.show = !this.show\n      if (this.show) {\n        this.$nextTick(() => {\n          this.init(true)\n        })\n      }\n      this.$emit(`on-${this.show === true ? 'show' : 'hide'}`)\n    }\n  },\n  data () {\n    return {\n      position: {\n        top: 0,\n        left: 0\n      },\n      show: true,\n      popoverStyle: {}\n    }\n  },\n  computed: {\n    arrowClass () {\n      return {\n        'vux-popover-arrow': true,\n        'vux-popover-arrow-up': this.placement === 'bottom',\n        'vux-popover-arrow-right': this.placement === 'left',\n        'vux-popover-arrow-left': this.placement === 'right',\n        'vux-popover-arrow-down': this.placement === 'top'\n      }\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"node_modules/vux/src/components/popover","sourcesContent":["<template>\n  <div v-click-outside=\"onClickedOutside\">\n    <span ref=\"trigger\" @click=\"toggle\">\n      <slot>\n      </slot>\n    </span>\n    <div\n      class=\"vux-popover\"\n      v-transfer-dom\n      ref=\"popover\"\n      :style=\"popoverStyle\"\n      v-show=\"show\">\n        <div :class=\"arrowClass\"></div>\n        <div @click=\"$emit('on-click-content')\">\n          <slot name=\"content\">\n            <div v-html=\"content\"></div>\n          </slot>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ClickOutside from '../../directives/click-outside'\nimport TransferDom from '../../directives/transfer-dom'\n\nexport default {\n  name: 'popover',\n  mounted () {\n    this.$nextTick(() => {\n      this.init()\n      window.addEventListener('resize', this.reset)\n    })\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.reset)\n  },\n  directives: {\n    TransferDom,\n    ClickOutside\n  },\n  props: {\n    content: String,\n    placement: String,\n    gutter: {\n      type: Number,\n      default: 5\n    }\n  },\n  methods: {\n    reset () {\n      if (this.show) {\n        this.init(true)\n      }\n    },\n    init (isReset) {\n      const trigger = this.$refs.trigger.children[0]\n      const popover = this.$refs.popover\n      const scrollTop = window.pageYOffset ||\n                    document.documentElement.scrollTop ||\n                    document.body.scrollTop\n      switch (this.placement) {\n        case 'top' :\n          this.position.left = trigger.offsetLeft - popover.offsetWidth / 2 + trigger.offsetWidth / 2\n          this.position.top = scrollTop + trigger.getBoundingClientRect().top - popover.offsetHeight - this.gutter\n          break\n        case 'left':\n          this.position.left = trigger.offsetLeft - popover.offsetWidth - this.gutter\n          this.position.top = scrollTop + trigger.getBoundingClientRect().top + trigger.offsetHeight / 2 - popover.offsetHeight / 2\n          break\n        case 'right':\n          this.position.left = trigger.offsetLeft + trigger.offsetWidth + this.gutter\n          this.position.top = scrollTop + trigger.getBoundingClientRect().top + trigger.offsetHeight / 2 - popover.offsetHeight / 2\n          break\n        case 'bottom':\n          this.position.left = trigger.offsetLeft - popover.offsetWidth / 2 + trigger.offsetWidth / 2\n          this.position.top = scrollTop + trigger.getBoundingClientRect().top + trigger.offsetHeight + this.gutter\n          break\n        default:\n          console.warn('Wrong placement prop')\n      }\n      if (!isReset) {\n        this.show = false\n      }\n\n      this.popoverStyle = {\n        top: this.position.top + 'px',\n        left: this.position.left + 'px',\n        display: isReset ? this.popoverStyle.display : 'none'\n      }\n    },\n    onClickedOutside () {\n      if (this.show) {\n        this.show = false\n        this.$emit('on-hide')\n      }\n    },\n    toggle () {\n      this.show = !this.show\n      if (this.show) {\n        this.$nextTick(() => {\n          this.init(true)\n        })\n      }\n      this.$emit(`on-${this.show === true ? 'show' : 'hide'}`)\n    }\n  },\n  data () {\n    return {\n      position: {\n        top: 0,\n        left: 0\n      },\n      show: true,\n      popoverStyle: {}\n    }\n  },\n  computed: {\n    arrowClass () {\n      return {\n        'vux-popover-arrow': true,\n        'vux-popover-arrow-up': this.placement === 'bottom',\n        'vux-popover-arrow-right': this.placement === 'left',\n        'vux-popover-arrow-left': this.placement === 'right',\n        'vux-popover-arrow-down': this.placement === 'top'\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../../styles/variable.less';\n\n.vux-popover {\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-color: @popover-bg-color;\n  color: @popover-font-color;\n  border-radius: @popover-border-radius;\n  z-index: 500;\n}\n.vux-popover-arrow {\n  position: absolute;\n  width: 0;\n  height: 0;\n}\n.vux-popover-arrow-up {\n border-left: @popover-border-width solid transparent;\n border-right: @popover-border-width solid transparent;\n border-bottom: @popover-border-width solid @popover-bg-color;\n left: 50%;\n transform: translateX(-50%);\n top: -@popover-border-width;\n}\n.vux-popover-arrow-down {\n  border-left: @popover-border-width solid transparent;\n  border-right: @popover-border-width solid transparent;\n  border-top: @popover-border-width solid @popover-bg-color;\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: -@popover-border-width;\n}\n.vux-popover-arrow-left {\n  border-top: @popover-border-width solid transparent;\n  border-bottom: @popover-border-width solid transparent;\n  border-right: @popover-border-width solid @popover-bg-color;\n  top: 50%;\n  transform: translateY(-50%);\n  left: -@popover-border-width;\n}\n.vux-popover-arrow-right {\n  border-top: @popover-border-width solid transparent;\n  border-bottom: @popover-border-width solid transparent;\n  border-left: @popover-border-width solid @popover-bg-color;\n  top: 50%;\n  transform: translateY(-50%);\n  right: -@popover-border-width;\n}\n</style>\n"]}]}