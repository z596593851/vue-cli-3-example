{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/tab/tab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/tab/tab.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { parentMixin } from '../../mixins/multi-items'\n\nexport default {\n  name: 'tab',\n  mixins: [parentMixin],\n  mounted () {\n    // stop bar anmination on first loading\n    this.$nextTick(() => {\n      setTimeout(() => {\n        this.hasReady = true\n      }, 0)\n    })\n  },\n  props: {\n    lineWidth: {\n      type: Number,\n      default: 3\n    },\n    activeColor: String,\n    barActiveColor: String,\n    defaultColor: String,\n    disabledColor: String,\n    animate: {\n      type: Boolean,\n      default: true\n    },\n    customBarWidth: [Function, String],\n    preventDefault: Boolean,\n    scrollThreshold: {\n      type: Number,\n      default: 4\n    },\n    barPosition: {\n      type: String,\n      default: 'bottom',\n      validator (val) {\n        return ['bottom', 'top'].indexOf(val) !== -1\n      }\n    }\n  },\n  computed: {\n    barLeft () {\n      if (this.hasReady) {\n        const nav = this.$refs.nav\n        const count = this.scrollable ? (nav.offsetWidth / this.$children[this.currentIndex || 0].$el.getBoundingClientRect().width) : this.number\n        return `${this.currentIndex * (100 / count)}%`\n      }\n    },\n    barRight () {\n      if (this.hasReady) {\n        const nav = this.$refs.nav\n        const count = this.scrollable ? (nav.offsetWidth / this.$children[this.currentIndex || 0].$el.getBoundingClientRect().width) : this.number\n        return `${(count - this.currentIndex - 1) * (100 / count)}%`\n      }\n    },\n    // when prop:custom-bar-width\n    innerBarStyle () {\n      return {\n        width: typeof this.customBarWidth === 'function' ? this.customBarWidth(this.currentIndex) : this.customBarWidth,\n        background: this.barActiveColor || this.activeColor\n      }\n    },\n    // end\n    barStyle () {\n      const commonStyle = {\n        left: this.barLeft,\n        right: this.barRight,\n        display: 'block',\n        height: this.lineWidth + 'px',\n        transition: !this.hasReady ? 'none' : null\n      }\n      if (!this.customBarWidth) {\n        commonStyle.background = this.barActiveColor || this.activeColor\n      } else {\n        commonStyle.background = 'transparent' // when=prop:custom-bar-width\n      }\n      return commonStyle\n    },\n    barClass () {\n      return {\n        'vux-tab-ink-bar-transition-forward': this.direction === 'forward',\n        'vux-tab-ink-bar-transition-backward': this.direction === 'backward'\n      }\n    },\n    scrollable () {\n      return this.number > this.scrollThreshold\n    }\n  },\n  watch: {\n    currentIndex (newIndex, oldIndex) {\n      this.direction = newIndex > oldIndex ? 'forward' : 'backward'\n      this.$emit('on-index-change', newIndex, oldIndex)\n      this.hasReady && this.scrollToActiveTab()\n    }\n  },\n  data () {\n    return {\n      direction: 'forward',\n      right: '100%',\n      hasReady: false\n    }\n  },\n  methods: {\n    scrollToActiveTab () {\n      if (!this.scrollable || !this.$children || !this.$children.length) {\n        return\n      }\n      const currentIndexTab = this.$children[this.currentIndex].$el\n      let count = 0\n      // scroll animation\n      const step = () => {\n        const scrollDuration = 15\n        const nav = this.$refs.nav\n        nav.scrollLeft += (currentIndexTab.offsetLeft - (nav.offsetWidth - currentIndexTab.offsetWidth) / 2 - nav.scrollLeft) / scrollDuration\n        if (++count < scrollDuration) {\n          window.requestAnimationFrame(step)\n        }\n      }\n      window.requestAnimationFrame(step)\n    }\n  }\n}\n",{"version":3,"sources":["tab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tab.vue","sourceRoot":"node_modules/vux/src/components/tab","sourcesContent":["<template>\n  <div\n    class=\"vux-tab-wrap\"\n    :class=\"barPosition === 'top' ? 'vux-tab-bar-top' : ''\">\n    <div class=\"vux-tab-container\">\n      <div\n        class=\"vux-tab\"\n        :class=\"[{'vux-tab-no-animate': !animate},{ scrollable }]\"\n        ref=\"nav\">\n        <slot></slot>\n        <div\n          v-if=\"animate\"\n          class=\"vux-tab-ink-bar\"\n          :class=\"barClass\"\n          :style=\"barStyle\">\n          <span\n            class=\"vux-tab-bar-inner\"\n            :style=\"innerBarStyle\"\n            v-if=\"customBarWidth\"></span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { parentMixin } from '../../mixins/multi-items'\n\nexport default {\n  name: 'tab',\n  mixins: [parentMixin],\n  mounted () {\n    // stop bar anmination on first loading\n    this.$nextTick(() => {\n      setTimeout(() => {\n        this.hasReady = true\n      }, 0)\n    })\n  },\n  props: {\n    lineWidth: {\n      type: Number,\n      default: 3\n    },\n    activeColor: String,\n    barActiveColor: String,\n    defaultColor: String,\n    disabledColor: String,\n    animate: {\n      type: Boolean,\n      default: true\n    },\n    customBarWidth: [Function, String],\n    preventDefault: Boolean,\n    scrollThreshold: {\n      type: Number,\n      default: 4\n    },\n    barPosition: {\n      type: String,\n      default: 'bottom',\n      validator (val) {\n        return ['bottom', 'top'].indexOf(val) !== -1\n      }\n    }\n  },\n  computed: {\n    barLeft () {\n      if (this.hasReady) {\n        const nav = this.$refs.nav\n        const count = this.scrollable ? (nav.offsetWidth / this.$children[this.currentIndex || 0].$el.getBoundingClientRect().width) : this.number\n        return `${this.currentIndex * (100 / count)}%`\n      }\n    },\n    barRight () {\n      if (this.hasReady) {\n        const nav = this.$refs.nav\n        const count = this.scrollable ? (nav.offsetWidth / this.$children[this.currentIndex || 0].$el.getBoundingClientRect().width) : this.number\n        return `${(count - this.currentIndex - 1) * (100 / count)}%`\n      }\n    },\n    // when prop:custom-bar-width\n    innerBarStyle () {\n      return {\n        width: typeof this.customBarWidth === 'function' ? this.customBarWidth(this.currentIndex) : this.customBarWidth,\n        background: this.barActiveColor || this.activeColor\n      }\n    },\n    // end\n    barStyle () {\n      const commonStyle = {\n        left: this.barLeft,\n        right: this.barRight,\n        display: 'block',\n        height: this.lineWidth + 'px',\n        transition: !this.hasReady ? 'none' : null\n      }\n      if (!this.customBarWidth) {\n        commonStyle.background = this.barActiveColor || this.activeColor\n      } else {\n        commonStyle.background = 'transparent' // when=prop:custom-bar-width\n      }\n      return commonStyle\n    },\n    barClass () {\n      return {\n        'vux-tab-ink-bar-transition-forward': this.direction === 'forward',\n        'vux-tab-ink-bar-transition-backward': this.direction === 'backward'\n      }\n    },\n    scrollable () {\n      return this.number > this.scrollThreshold\n    }\n  },\n  watch: {\n    currentIndex (newIndex, oldIndex) {\n      this.direction = newIndex > oldIndex ? 'forward' : 'backward'\n      this.$emit('on-index-change', newIndex, oldIndex)\n      this.hasReady && this.scrollToActiveTab()\n    }\n  },\n  data () {\n    return {\n      direction: 'forward',\n      right: '100%',\n      hasReady: false\n    }\n  },\n  methods: {\n    scrollToActiveTab () {\n      if (!this.scrollable || !this.$children || !this.$children.length) {\n        return\n      }\n      const currentIndexTab = this.$children[this.currentIndex].$el\n      let count = 0\n      // scroll animation\n      const step = () => {\n        const scrollDuration = 15\n        const nav = this.$refs.nav\n        nav.scrollLeft += (currentIndexTab.offsetLeft - (nav.offsetWidth - currentIndexTab.offsetWidth) / 2 - nav.scrollLeft) / scrollDuration\n        if (++count < scrollDuration) {\n          window.requestAnimationFrame(step)\n        }\n      }\n      window.requestAnimationFrame(step)\n    }\n  }\n}\n</script>\n\n\n<style lang=\"less\">\n@import '../../styles/variable.less';\n\n@prefixClass: vux-tab;\n@easing-in-out: cubic-bezier(0.35, 0, 0.25, 1);\n@effect-duration: .3s;\n\n.@{prefixClass} {\n\n  &-ink-bar {\n    position: absolute;\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: @tab-bar-active-color;\n    text-align: center;\n\n    &-transition-forward {\n      transition: right @effect-duration @easing-in-out,\n      left @effect-duration @easing-in-out @effect-duration * 0.3;\n    }\n    &-transition-backward {\n      transition: right @effect-duration @easing-in-out @effect-duration * 0.3,\n      left @effect-duration @easing-in-out;\n    }\n  }\n\n}\n\n.vux-tab-bar-top .@{prefixClass} {\n  &-ink-bar {\n    top: 0;\n  }\n}\n\n.vux-tab {\n  display: flex;\n  background-color: #fff;\n  height: 44px;\n  position: relative;\n}\n\n.vux-tab button {\n  padding: 0;\n  border: 0;\n  outline: 0;\n  background: 0 0;\n  appearance: none;\n}\n\n.vux-tab .vux-tab-item {\n  display: block;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  background: linear-gradient(180deg, #e5e5e5, #e5e5e5, rgba(229, 229, 229, 0)) bottom left no-repeat;\n  background-size: 100% 1px;\n  font-size: 14px;\n  text-align: center;\n  line-height: 44px;\n  color: @tab-text-default-color;\n}\n\n.vux-tab .vux-tab-item.vux-tab-selected {\n  color: @tab-text-active-color;\n  border-bottom: 3px solid @tab-text-active-color;\n}\n\n.vux-tab-bar-top {\n  .vux-tab .vux-tab-item {\n    background: linear-gradient(180deg, #e5e5e5, #e5e5e5, rgba(229, 229, 229, 0)) top left no-repeat;\n    background-size: 100% 1px;\n  }\n  .vux-tab .vux-tab-item.vux-tab-selected {\n    border-bottom: none;\n    border-top: 3px solid @tab-text-active-color;\n  }\n}\n\n.vux-tab .vux-tab-item.vux-tab-disabled {\n  color: @tab-text-disabled-color;\n}\n\n.vux-tab.vux-tab-no-animate .vux-tab-item.vux-tab-selected {\n  background: 0 0;\n}\n\n/** when=prop:custom-bar-width **/\n.vux-tab-bar-inner {\n  display: block;\n  background-color: @tab-text-active-color;\n  margin: auto;\n  height: 100%;\n  transition: width 0.3s @easing-in-out;\n}\n\n.vux-tab-item-badge {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  box-sizing: border-box;\n  display: inline-block;\n  height: 18px;\n  min-width: 18px;\n  padding: 0 4px;\n  border-radius: 30px;\n  margin: auto 0 auto 4px;\n  line-height: 18px;\n  font-size: 11px;\n  background-clip: padding-box;\n  vertical-align: middle;\n}\n\n.vux-tab-wrap {\n  position: relative;\n  padding-top: 44px;\n}\n\n.vux-tab-container {\n  height: 44px;\n  top: 0;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n  position: absolute;\n}\n\n.scrollable {\n  overflow-y: hidden;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-bottom: 17px;\n  box-sizing: content-box;\n}\n\n.scrollable::-webkit-scrollbar {\n  display: none;\n}\n\n.scrollable .vux-tab-ink-bar {\n  bottom: 17px;\n  position: absolute;\n}\n\n.scrollable .vux-tab-item {\n  flex: 0 0 22%;\n}\n\n</style>\n"]}]}