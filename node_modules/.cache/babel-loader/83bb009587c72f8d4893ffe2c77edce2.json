{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/confirm/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/confirm/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport XDialog from \"../x-dialog\";\nexport default {\n  name: 'confirm',\n  components: {\n    XDialog: XDialog\n  },\n  props: {\n    value: {\n      type: Boolean,\n      default: false\n    },\n    showInput: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    theme: {\n      type: String,\n      default: 'ios'\n    },\n    hideOnBlur: {\n      type: Boolean,\n      default: false\n    },\n    title: String,\n    confirmText: String,\n    cancelText: String,\n    maskTransition: {\n      type: String,\n      default: 'vux-fade'\n    },\n    maskZIndex: [Number, String],\n    dialogTransition: {\n      type: String,\n      default: 'vux-dialog'\n    },\n    content: String,\n    closeOnConfirm: {\n      type: Boolean,\n      default: true\n    },\n    inputAttrs: Object,\n    showContent: {\n      type: Boolean,\n      default: true\n    },\n    confirmType: {\n      type: String,\n      default: 'primary'\n    },\n    showCancelButton: {\n      type: Boolean,\n      default: true\n    },\n    showConfirmButton: {\n      type: Boolean,\n      default: true\n    }\n  },\n  created: function created() {\n    this.showValue = this.show;\n\n    if (this.value) {\n      this.showValue = this.value;\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.showValue = val;\n    },\n    showValue: function showValue(val) {\n      var _this = this;\n\n      this.$emit('input', val);\n\n      if (val) {\n        if (this.showInput) {\n          this.msg = '';\n          setTimeout(function () {\n            if (_this.$refs.input) {\n              _this.setInputFocus();\n            }\n          }, 300);\n        }\n\n        this.$emit('on-show'); // emit just after msg is cleared\n      }\n    }\n  },\n  data: function data() {\n    return {\n      msg: '',\n      showValue: false\n    };\n  },\n  methods: {\n    getInputAttrs: function getInputAttrs() {\n      return this.inputAttrs || {\n        type: 'text'\n      };\n    },\n    setInputValue: function setInputValue(val) {\n      this.msg = val;\n    },\n    setInputFocus: function setInputFocus(evt) {\n      if (evt) {\n        evt.preventDefault();\n      }\n\n      this.$refs.input.focus();\n    },\n    _onConfirm: function _onConfirm() {\n      if (!this.showValue) {\n        return;\n      }\n\n      if (this.closeOnConfirm) {\n        this.showValue = false;\n      }\n\n      this.$emit('on-confirm', this.msg);\n    },\n    _onCancel: function _onCancel() {\n      if (!this.showValue) {\n        return;\n      }\n\n      this.showValue = false;\n      this.$emit('on-cancel');\n    }\n  }\n};",{"version":3,"sources":["/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/confirm/index.vue"],"names":["XDialog","name","components","props","value","type","Boolean","default","showInput","placeholder","String","theme","hideOnBlur","title","confirmText","cancelText","maskTransition","maskZIndex","Number","dialogTransition","content","closeOnConfirm","inputAttrs","Object","showContent","confirmType","showCancelButton","showConfirmButton","created","showValue","show","watch","val","$emit","msg","setTimeout","$refs","input","setInputFocus","data","methods","getInputAttrs","setInputValue","evt","preventDefault","focus","_onConfirm","_onCancel"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport XDialog from '../x-dialog'\nexport default {\n  name: 'confirm',\n  components: {\n    XDialog\n  },\n  props: {\n    value: {\n      type: Boolean,\n      default: false\n    },\n    showInput: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    theme: {\n      type: String,\n      default: 'ios'\n    },\n    hideOnBlur: {\n      type: Boolean,\n      default: false\n    },\n    title: String,\n    confirmText: String,\n    cancelText: String,\n    maskTransition: {\n      type: String,\n      default: 'vux-fade'\n    },\n    maskZIndex: [Number, String],\n    dialogTransition: {\n      type: String,\n      default: 'vux-dialog'\n    },\n    content: String,\n    closeOnConfirm: {\n      type: Boolean,\n      default: true\n    },\n    inputAttrs: Object,\n    showContent: {\n      type: Boolean,\n      default: true\n    },\n    confirmType: {\n      type: String,\n      default: 'primary'\n    },\n    showCancelButton: {\n      type: Boolean,\n      default: true\n    },\n    showConfirmButton: {\n      type: Boolean,\n      default: true\n    }\n  },\n  created () {\n    this.showValue = this.show\n    if (this.value) {\n      this.showValue = this.value\n    }\n  },\n  watch: {\n    value (val) {\n      this.showValue = val\n    },\n    showValue (val) {\n      this.$emit('input', val)\n      if (val) {\n        if (this.showInput) {\n          this.msg = ''\n          setTimeout(() => {\n            if (this.$refs.input) {\n              this.setInputFocus()\n            }\n          }, 300)\n        }\n        this.$emit('on-show') // emit just after msg is cleared\n      }\n    }\n  },\n  data () {\n    return {\n      msg: '',\n      showValue: false\n    }\n  },\n  methods: {\n    getInputAttrs () {\n      return this.inputAttrs || {\n        type: 'text'\n      }\n    },\n    setInputValue (val) {\n      this.msg = val\n    },\n    setInputFocus (evt) {\n      if (evt) {\n        evt.preventDefault()\n      }\n      this.$refs.input.focus()\n    },\n    _onConfirm () {\n      if (!this.showValue) {\n        return\n      }\n      if (this.closeOnConfirm) {\n        this.showValue = false\n      }\n      this.$emit('on-confirm', this.msg)\n    },\n    _onCancel () {\n      if (!this.showValue) {\n        return\n      }\n      this.showValue = false\n      this.$emit('on-cancel')\n    }\n  }\n}\n"]}]}