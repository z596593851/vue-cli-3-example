{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/color-picker/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/color-picker/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Icon from \"../icon\";\nimport { Flexbox, FlexboxItem } from \"../flexbox\";\nvar sizeMap = {\n  'large': 40,\n  'middle': 30,\n  'small': 20\n};\nexport default {\n  name: 'color-picker',\n  components: {\n    Icon: Icon,\n    Flexbox: Flexbox,\n    FlexboxItem: FlexboxItem\n  },\n  created: function created() {\n    this.currentValue = this.value;\n  },\n  props: {\n    colors: {\n      type: Array,\n      required: true\n    },\n    size: {\n      type: String,\n      default: 'large'\n    },\n    value: String\n  },\n  computed: {\n    width: function width() {\n      return sizeMap[this.size];\n    }\n  },\n  data: function data() {\n    return {\n      currentValue: ''\n    };\n  },\n  watch: {\n    value: function value(val) {\n      this.currentValue = val;\n    },\n    currentValue: function currentValue(color) {\n      this.$emit('on-change', color);\n      this.$emit('input', color);\n    }\n  },\n  methods: {\n    change: function change(color) {\n      this.currentValue = color;\n    }\n  }\n};",{"version":3,"sources":["/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/color-picker/index.vue"],"names":["Icon","Flexbox","FlexboxItem","sizeMap","name","components","created","currentValue","value","props","colors","type","Array","required","size","String","default","computed","width","data","watch","val","color","$emit","methods","change"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,IAAP;AACA,SAASC,OAAT,EAAkBC,WAAlB;AAEA,IAAMC,OAAO,GAAG;AACd,WAAS,EADK;AAEd,YAAU,EAFI;AAGd,WAAS;AAHK,CAAhB;AAKA,eAAe;AACbC,EAAAA,IAAI,EAAE,cADO;AAEbC,EAAAA,UAAU,EAAE;AACVL,IAAAA,IAAI,EAAJA,IADU;AAEVC,IAAAA,OAAO,EAAPA,OAFU;AAGVC,IAAAA,WAAW,EAAXA;AAHU,GAFC;AAObI,EAAAA,OAPa,qBAOF;AACT,SAAKC,YAAL,GAAoB,KAAKC,KAAzB;AACD,GATY;AAUbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEC,KADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADH;AAKLC,IAAAA,IAAI,EAAE;AACJH,MAAAA,IAAI,EAAEI,MADF;AAEJC,MAAAA,OAAO,EAAE;AAFL,KALD;AASLR,IAAAA,KAAK,EAAEO;AATF,GAVM;AAqBbE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KADQ,mBACC;AACP,aAAOf,OAAO,CAAC,KAAKW,IAAN,CAAd;AACD;AAHO,GArBG;AA0BbK,EAAAA,IA1Ba,kBA0BL;AACN,WAAO;AACLZ,MAAAA,YAAY,EAAE;AADT,KAAP;AAGD,GA9BY;AA+Bba,EAAAA,KAAK,EAAE;AACLZ,IAAAA,KADK,iBACEa,GADF,EACO;AACV,WAAKd,YAAL,GAAoBc,GAApB;AACD,KAHI;AAILd,IAAAA,YAJK,wBAISe,KAJT,EAIgB;AACnB,WAAKC,KAAL,CAAW,WAAX,EAAwBD,KAAxB;AACA,WAAKC,KAAL,CAAW,OAAX,EAAoBD,KAApB;AACD;AAPI,GA/BM;AAwCbE,EAAAA,OAAO,EAAE;AACPC,IAAAA,MADO,kBACCH,KADD,EACQ;AACb,WAAKf,YAAL,GAAoBe,KAApB;AACD;AAHM;AAxCI,CAAf","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Icon from '../icon'\nimport { Flexbox, FlexboxItem } from '../flexbox'\n\nconst sizeMap = {\n  'large': 40,\n  'middle': 30,\n  'small': 20\n}\nexport default {\n  name: 'color-picker',\n  components: {\n    Icon,\n    Flexbox,\n    FlexboxItem\n  },\n  created () {\n    this.currentValue = this.value\n  },\n  props: {\n    colors: {\n      type: Array,\n      required: true\n    },\n    size: {\n      type: String,\n      default: 'large'\n    },\n    value: String\n  },\n  computed: {\n    width () {\n      return sizeMap[this.size]\n    }\n  },\n  data () {\n    return {\n      currentValue: ''\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentValue = val\n    },\n    currentValue (color) {\n      this.$emit('on-change', color)\n      this.$emit('input', color)\n    }\n  },\n  methods: {\n    change (color) {\n      this.currentValue = color\n    }\n  }\n}\n"]}]}