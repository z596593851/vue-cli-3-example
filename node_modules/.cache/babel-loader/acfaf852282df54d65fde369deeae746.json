{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/calendar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/calendar/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/apple/code/js/vue-cli-3-example/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport InlineCalendar from \"../inline-calendar\";\nimport Popup from \"../popup\";\nimport Cell from \"../cell\";\nimport props from \"../inline-calendar/props\";\nimport TransferDom from \"../../directives/transfer-dom\";\nimport PopupHeader from \"../popup-header\";\nimport format from \"../../tools/date/format\";\n\nvar getType = function getType(value) {\n  if (typeof value === 'string') {\n    return 'string';\n  }\n\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return 'array';\n  }\n};\n\nvar pure = function pure(value) {\n  var type = getType(value);\n\n  if (type === 'string') {\n    return value;\n  } else if (type === 'array') {\n    return JSON.parse(JSON.stringify(value));\n  }\n};\n\nvar Props = _objectSpread(_objectSpread({}, props()), {}, {\n  title: {\n    type: String,\n    required: true\n  },\n  placeholder: String,\n  showPopupHeader: Boolean,\n  popupHeaderTitle: String,\n  displayFormat: {\n    type: Function,\n    default: function _default(value) {\n      return typeof value === 'string' ? value : value.join(', ');\n    }\n  },\n  // for test only\n  shouldTransferDom: {\n    type: Boolean,\n    default: true\n  },\n  readonly: Boolean\n});\n\nexport default {\n  name: 'calendar',\n  directives: {\n    TransferDom: TransferDom\n  },\n  components: {\n    InlineCalendar: InlineCalendar,\n    Popup: Popup,\n    PopupHeader: PopupHeader,\n    Cell: Cell\n  },\n  computed: {\n    shouldConfirm: function shouldConfirm() {\n      return this.showPopupHeader || this.getType(this.value) === 'array';\n    },\n    shouldShowPlaceholder: function shouldShowPlaceholder() {\n      if (typeof this.value === 'string' && !this.value) {\n        return true;\n      }\n\n      if (getType(this.value) === 'array' && !this.value.length) {\n        return true;\n      }\n\n      return false;\n    }\n  },\n  created: function created() {\n    if (this.value === 'TODAY') {\n      this.currentValue = format(new Date(), 'YYYY-MM-DD');\n      this.$emit('input', this.currentValue);\n    } else {\n      if (this.getType(this.value) === 'string') {\n        this.currentValue = this.value;\n      } else {\n        this.currentValue = pure(this.value);\n      }\n    }\n  },\n  props: Props,\n  methods: {\n    onPopupShow: function onPopupShow() {\n      this.$emit('on-show');\n    },\n    onPopupHide: function onPopupHide() {\n      this.$emit('on-hide'); // reset value to show value\n\n      this.currentValue = pure(this.value);\n    },\n    getType: getType,\n    onClickLeft: function onClickLeft() {\n      this.show = false;\n      this.currentValue = pure(this.value);\n    },\n    onClickRight: function onClickRight() {\n      this.show = false;\n      var value = pure(this.currentValue);\n      this.$emit('input', value);\n    },\n    onClick: function onClick() {\n      if (!this.readonly) {\n        this.show = true;\n      }\n    },\n    onCalendarValueChange: function onCalendarValueChange(val) {\n      if (!this.shouldConfirm) {\n        this.show = false;\n        this.$emit('input', pure(val));\n      }\n    },\n    onSelectSingleDate: function onSelectSingleDate() {\n      if (!this.shouldConfirm) {\n        this.show = false;\n      }\n    }\n  },\n  watch: {\n    value: function value(newVal, oldVal) {\n      if (this.getType(this.value) === 'string') {\n        this.currentValue = newVal;\n        this.$emit('on-change', newVal);\n      } else {\n        if (JSON.stringify(newVal) !== JSON.stringify(oldVal)) {\n          this.$emit('on-change', pure(newVal));\n        }\n\n        this.currentValue = pure(newVal);\n      }\n    }\n  },\n  data: function data() {\n    return {\n      show: false,\n      currentValue: ''\n    };\n  }\n};",{"version":3,"sources":["/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/calendar/index.vue"],"names":["InlineCalendar","Popup","Cell","props","TransferDom","PopupHeader","format","getType","value","Object","prototype","toString","call","pure","type","JSON","parse","stringify","Props","title","String","required","placeholder","showPopupHeader","Boolean","popupHeaderTitle","displayFormat","Function","default","join","shouldTransferDom","readonly","name","directives","components","computed","shouldConfirm","shouldShowPlaceholder","length","created","currentValue","Date","$emit","methods","onPopupShow","onPopupHide","onClickLeft","show","onClickRight","onClick","onCalendarValueChange","val","onSelectSingleDate","watch","newVal","oldVal","data"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport InlineCalendar from '../inline-calendar'\nimport Popup from '../popup'\nimport Cell from '../cell'\nimport props from '../inline-calendar/props'\nimport TransferDom from '../../directives/transfer-dom'\nimport PopupHeader from '../popup-header'\nimport format from '../../tools/date/format'\n\nconst getType = (value) => {\n  if (typeof value === 'string') {\n    return 'string'\n  }\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return 'array'\n  }\n}\n\nconst pure = function (value) {\n  const type = getType(value)\n  if (type === 'string') {\n    return value\n  } else if (type === 'array') {\n    return JSON.parse(JSON.stringify(value))\n  }\n}\n\nconst Props = {\n  ...props(),\n  title: {\n    type: String,\n    required: true\n  },\n  placeholder: String,\n  showPopupHeader: Boolean,\n  popupHeaderTitle: String,\n  displayFormat: {\n    type: Function,\n    default: (value) => {\n      return typeof value === 'string' ? value : value.join(', ')\n    }\n  },\n  // for test only\n  shouldTransferDom: {\n    type: Boolean,\n    default: true\n  },\n  readonly: Boolean\n}\n\nexport default {\n  name: 'calendar',\n  directives: {\n    TransferDom\n  },\n  components: {\n    InlineCalendar,\n    Popup,\n    PopupHeader,\n    Cell\n  },\n  computed: {\n    shouldConfirm () {\n      return this.showPopupHeader || this.getType(this.value) === 'array'\n    },\n    shouldShowPlaceholder () {\n      if (typeof this.value === 'string' && !this.value) {\n        return true\n      }\n      if (getType(this.value) === 'array' && !this.value.length) {\n        return true\n      }\n      return false\n    }\n  },\n  created () {\n    if (this.value === 'TODAY') {\n      this.currentValue = format(new Date(), 'YYYY-MM-DD')\n      this.$emit('input', this.currentValue)\n    } else {\n      if (this.getType(this.value) === 'string') {\n        this.currentValue = this.value\n      } else {\n        this.currentValue = pure(this.value)\n      }\n    }\n  },\n  props: Props,\n  methods: {\n    onPopupShow () {\n      this.$emit('on-show')\n    },\n    onPopupHide () {\n      this.$emit('on-hide')\n      // reset value to show value\n      this.currentValue = pure(this.value)\n    },\n    getType,\n    onClickLeft () {\n      this.show = false\n      this.currentValue = pure(this.value)\n    },\n    onClickRight () {\n      this.show = false\n      const value = pure(this.currentValue)\n      this.$emit('input', value)\n    },\n    onClick () {\n      if (!this.readonly) {\n        this.show = true\n      }\n    },\n    onCalendarValueChange (val) {\n      if (!this.shouldConfirm) {\n        this.show = false\n        this.$emit('input', pure(val))\n      }\n    },\n    onSelectSingleDate () {\n      if (!this.shouldConfirm) {\n        this.show = false\n      }\n    }\n  },\n  watch: {\n    value (newVal, oldVal) {\n      if (this.getType(this.value) === 'string') {\n        this.currentValue = newVal\n        this.$emit('on-change', newVal)\n      } else {\n        if (JSON.stringify(newVal) !== JSON.stringify(oldVal)) {\n          this.$emit('on-change', pure(newVal))\n        }\n        this.currentValue = pure(newVal)\n      }\n    }\n  },\n  data () {\n    return {\n      show: false,\n      currentValue: ''\n    }\n  }\n}\n"]}]}