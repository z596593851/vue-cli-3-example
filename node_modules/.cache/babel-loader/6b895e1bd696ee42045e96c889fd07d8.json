{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/x-address/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/x-address/index.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport name2value from \"../../filters/name2value\";\nimport value2name from \"../../filters/value2name\";\nimport PopupPicker from \"../popup-picker\";\nexport default {\n  name: 'x-address',\n  components: {\n    PopupPicker: PopupPicker\n  },\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    rawValue: Boolean,\n    list: {\n      type: Array,\n      required: true\n    },\n    labelWidth: String,\n    inlineDesc: String,\n    placeholder: String,\n    hideDistrict: Boolean,\n    valueTextAlign: String,\n    confirmText: String,\n    cancelText: String,\n    displayFormat: {\n      type: Function,\n      default: function _default(val, names) {\n        return names;\n      }\n    },\n    popupStyle: Object,\n    popupTitle: String,\n    show: Boolean,\n    disabled: Boolean\n  },\n  created: function created() {\n    if (this.currentValue.length && this.rawValue) {\n      var parsedVal = name2value(this.currentValue, this.list);\n\n      if (/__/.test(parsedVal)) {\n        console.error('[VUX] Wrong address value', this.currentValue);\n        this.currentValue = [];\n      } else {\n        this.currentValue = parsedVal.split(' ');\n      }\n    }\n\n    if (this.show) {\n      this.showValue = true;\n    }\n  },\n  methods: {\n    emitHide: function emitHide(val) {\n      this.$emit('on-hide', val);\n    },\n    getAddressName: function getAddressName() {\n      return value2name(this.value, this.list);\n    },\n    onShadowChange: function onShadowChange(ids, names) {\n      this.$emit('on-shadow-change', ids, names);\n    }\n  },\n  data: function data() {\n    return {\n      currentValue: this.value,\n      showValue: false\n    };\n  },\n  computed: {\n    nameValue: function nameValue() {\n      return value2name(this.currentValue, this.list);\n    },\n    labelClass: function labelClass() {\n      return {\n        'vux-cell-justify': this.$parent && (this.$parent.labelAlign === 'justify' || this.$parent.$parent.labelAlign === 'justify')\n      };\n    }\n  },\n  watch: {\n    currentValue: function currentValue(val) {\n      this.$emit('input', val);\n    },\n    value: function value(val) {\n      if (val.length && !/\\d+/.test(val[0])) {\n        var id = name2value(val, this.list).split(' ');\n\n        if (id[0] !== '__' && id[1] !== '__') {\n          this.currentValue = id;\n          return;\n        }\n      }\n\n      this.currentValue = val;\n    },\n    show: function show(val) {\n      this.showValue = val;\n    },\n    showValue: function showValue(val) {\n      this.$emit('update:show', val);\n    }\n  }\n};",{"version":3,"sources":["/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/x-address/index.vue"],"names":["name2value","value2name","PopupPicker","name","components","props","title","type","String","required","value","Array","default","rawValue","Boolean","list","labelWidth","inlineDesc","placeholder","hideDistrict","valueTextAlign","confirmText","cancelText","displayFormat","Function","val","names","popupStyle","Object","popupTitle","show","disabled","created","currentValue","length","parsedVal","test","console","error","split","showValue","methods","emitHide","$emit","getAddressName","onShadowChange","ids","data","computed","nameValue","labelClass","$parent","labelAlign","watch","id"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport name2value from '../../filters/name2value'\nimport value2name from '../../filters/value2name'\nimport PopupPicker from '../popup-picker'\n\nexport default {\n  name: 'x-address',\n  components: {\n    PopupPicker\n  },\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    rawValue: Boolean,\n    list: {\n      type: Array,\n      required: true\n    },\n    labelWidth: String,\n    inlineDesc: String,\n    placeholder: String,\n    hideDistrict: Boolean,\n    valueTextAlign: String,\n    confirmText: String,\n    cancelText: String,\n    displayFormat: {\n      type: Function,\n      default: (val, names) => names\n    },\n    popupStyle: Object,\n    popupTitle: String,\n    show: Boolean,\n    disabled: Boolean\n  },\n  created () {\n    if (this.currentValue.length && this.rawValue) {\n      const parsedVal = name2value(this.currentValue, this.list)\n      if (/__/.test(parsedVal)) {\n        console.error('[VUX] Wrong address value', this.currentValue)\n        this.currentValue = []\n      } else {\n        this.currentValue = parsedVal.split(' ')\n      }\n    }\n    if (this.show) {\n      this.showValue = true\n    }\n  },\n  methods: {\n    emitHide (val) {\n      this.$emit('on-hide', val)\n    },\n    getAddressName () {\n      return value2name(this.value, this.list)\n    },\n    onShadowChange (ids, names) {\n      this.$emit('on-shadow-change', ids, names)\n    }\n  },\n  data () {\n    return {\n      currentValue: this.value,\n      showValue: false\n    }\n  },\n  computed: {\n    nameValue () {\n      return value2name(this.currentValue, this.list)\n    },\n    labelClass () {\n      return {\n        'vux-cell-justify': this.$parent && (this.$parent.labelAlign === 'justify' || this.$parent.$parent.labelAlign === 'justify')\n      }\n    }\n  },\n  watch: {\n    currentValue (val) {\n      this.$emit('input', val)\n    },\n    value (val) {\n      if (val.length && !/\\d+/.test(val[0])) {\n        const id = name2value(val, this.list).split(' ')\n        if (id[0] !== '__' && id[1] !== '__') {\n          this.currentValue = id\n          return\n        }\n      }\n      this.currentValue = val\n    },\n    show (val) {\n      this.showValue = val\n    },\n    showValue (val) {\n      this.$emit('update:show', val)\n    }\n  }\n}\n"]}]}