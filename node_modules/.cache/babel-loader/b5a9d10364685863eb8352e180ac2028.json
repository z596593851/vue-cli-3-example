{"remainingRequest":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js!/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/v-chart/v-chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/v-chart/v-chart.vue","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/js-loader.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/code/js/vue-cli-3-example/node_modules/@vux/loader/src/script-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/apple/code/js/vue-cli-3-example/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/apple/code/js/vue-cli-3-example/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _typeof from \"/Users/apple/code/js/vue-cli-3-example/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// const shapeMap = {\n//   point: ['circle', 'hollowCircle', 'rect'],\n//   line: ['line', 'smooth', 'dash'],\n//   area: ['area', 'smooth'],\n//   interval: ['rect'],\n//   polygon: ['polygon'],\n//   schema: ['candle']\n// }\nimport F2 from '@antv/f2';\nexport default {\n  props: {\n    width: Number,\n    height: Number,\n    backgroundColor: {\n      type: String,\n      default: '#fff'\n    },\n    data: {\n      type: Array\n    },\n    tooltip: {\n      type: Object\n    },\n    shape: {\n      type: String,\n      default: 'line'\n    },\n    preventRender: {\n      type: Boolean,\n      default: false\n    },\n    preventDefault: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      xField: '',\n      yField: '',\n      hasPoint: false,\n      pointStyle: {},\n      guideTags: [],\n      areaOptions: null,\n      lineOptions: null,\n      tooltipOptions: null,\n      legendOptions: null,\n      barOptions: null,\n      pieOptions: null,\n      guideOptions: null,\n      pointOptions: null,\n      xFieldOptions: {},\n      yFieldOptions: {},\n      guides: [],\n      seriesField: '',\n      xAxisOptions: null,\n      yAxisOptions: null,\n      autoAlignXAxis: undefined\n    };\n  },\n  computed: {\n    currentData: function currentData() {\n      if (this.pieOptions) {\n        return this.data.slice().map(function (item) {\n          item.a = '1';\n          return item;\n        });\n      }\n\n      return this.data;\n    },\n    currentXFieldOptions: function currentXFieldOptions(val) {\n      var defaultOptions = {\n        tickCount: 5\n      };\n\n      if (!this.barOptions) {\n        defaultOptions.range = [0, 1];\n      } else {\n        defaultOptions.tickCount = 0;\n      } // auto detect if is timeCat\n\n\n      if (!this.xFieldOptions) {\n        if (/\\d{4}-\\d{2}-\\d{2}/.test(this.data[0][this.xField])) {\n          return Object.assign({}, defaultOptions, {\n            type: 'timeCat',\n            tickCount: 3\n          });\n        } else {\n          return defaultOptions;\n        }\n      }\n\n      return Object.assign({}, defaultOptions, this.xFieldOptions);\n    },\n    currentYFieldOptions: function currentYFieldOptions(val) {\n      var defaultOptions = {\n        tickCount: 5\n      };\n\n      if (!val) {\n        return defaultOptions;\n      }\n\n      return Object.assign({}, defaultOptions, this.yFieldOptions);\n    }\n  },\n  watch: {\n    data: function data() {\n      this.changeData(this.data);\n    }\n  },\n  methods: {\n    onTouchstart: function onTouchstart(e) {\n      this.preventDefault && e.preventDefault();\n    },\n    set: function set(name, options) {\n      this[\"\".concat(name, \"Options\")] = options;\n    },\n    changeData: function changeData(data) {\n      this.chart && this.chart.changeData(data);\n    },\n    setField: function setField(axis, item) {\n      this[\"\".concat(axis, \"Field\")] = item;\n    },\n    repaint: function repaint() {\n      this.chart.repaint();\n    },\n    rerender: function rerender() {\n      this.destroy();\n      this.render();\n    },\n    destroy: function destroy() {\n      this.chart && this.chart.destroy();\n    },\n    addGuide: function addGuide(options) {\n      this.guides.push(options);\n    },\n    setScale: function setScale(options) {\n      if (options.x) {\n        this.xFieldOptions = options.x;\n      }\n\n      if (options.y) {\n        this.yFieldOptions = options.y;\n      }\n    },\n    setAxis: function setAxis(options) {\n      if (options.x) {\n        this.xAxisOptions = options;\n\n        if (typeof options.autoAlign !== 'undefined') {\n          this.autoAlignXAxis = options.autoAlign;\n        }\n      }\n\n      if (options.y) {\n        this.yAxisOptions = options;\n      }\n    },\n    buildColor: function buildColor(c) {\n      var color = c || '';\n\n      if (Array.isArray(c) && Array.isArray(c[0])) {\n        var ctx = this.$refs.chart.getContext('2d');\n        color = ctx.createLinearGradient(0, 0, window.innerWidth, 0);\n        c.forEach(function (c) {\n          color.addColorStop(c[0], c[1]);\n        });\n      }\n\n      return color;\n    },\n    setPie: function setPie() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.pieOptions = options;\n    },\n    setBar: function setBar() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.barOptions = options;\n    },\n    setLegend: function setLegend(options) {\n      this.legendOptions = options;\n    },\n    setTooltip: function setTooltip(options) {\n      this.tooltipOptions = options;\n    },\n    setArea: function setArea(options) {\n      this.areaOptions = options;\n    },\n    setGuide: function setGuide(options) {\n      this.guideOptions = options;\n    },\n    setLine: function setLine(options) {\n      this.lineOptions = options;\n    },\n    setPoint: function setPoint(options) {\n      this.pointOptions = options;\n    },\n    buildPosition: function buildPosition() {\n      return \"\".concat(this.xField, \"*\").concat(this.yField);\n    },\n    getFields: function getFields() {\n      if (this.xField && this.yField) {\n        return;\n      }\n\n      if (this.data && this.data.length) {\n        var keys = Object.keys(this.data[0]);\n\n        if (keys.length >= 2) {\n          var indexes = [0, 1];\n\n          var type1 = _typeof(this.data[0][keys[0]]);\n\n          var type2 = _typeof(this.data[0][keys[1]]);\n\n          if (type1 === 'number' && type2 !== 'number') {\n            indexes = [1, 0];\n          } else if (type1 === 'string' && type2 === 'string' && keys[2] === 'value') {\n            indexes = [0, 2];\n          }\n\n          this.xField = keys[indexes[0]];\n          this.yField = keys[indexes[1]];\n        }\n      }\n    },\n    render: function render() {\n      var _this2 = this;\n\n      var _this = this;\n\n      var autoAlignXAxis = this.autoAlignXAxis;\n\n      if (this.barOptions) {\n        autoAlignXAxis = false;\n      }\n\n      if (typeof autoAlignXAxis === 'undefined') {\n        autoAlignXAxis = true;\n      }\n\n      var windowWidth = window.innerWidth;\n      var windowHeight = window.innerHeight;\n      var chart = new F2.Chart(_objectSpread({\n        el: this.$refs.chart,\n        width: this.width || windowWidth,\n        height: this.height ? this.height : windowWidth > windowHeight ? windowHeight - 54 : windowWidth * 0.707,\n        pixelRatio: this.$devicePixelRatio || window.devicePixelRatio\n      }, this.$attrs));\n\n      if (this.preventRender) {\n        this.$emit('on-render', {\n          chart: chart\n        });\n        return;\n      }\n\n      if (!this.data || !this.data.length) {\n        return;\n      }\n\n      this.getFields();\n      chart.source(this.currentData);\n      chart.scale(this.xField, this.currentXFieldOptions);\n      chart.scale(this.yField, this.currentYFieldOptions);\n\n      if (this.legendOptions) {\n        if (this.legendOptions.disabled) {\n          chart.legend(false);\n        } else {\n          chart.legend(this.legendOptions);\n        }\n      }\n\n      if (this.tooltipOptions) {\n        if (this.barOptions) {\n          this.tooltipOptions.showCrosshairs = false;\n        }\n\n        if (!this.tooltipOptions.disabled) {\n          // handle show-value-in-legend\n          if (this.tooltipOptions.showValueInLegend) {\n            var customTooltip = {\n              custom: true,\n              // 自定义 tooltip 内容框\n              onChange: function onChange(obj) {\n                var legend = _this.chart.get('legendController').legends.top[0];\n\n                var tooltipItems = obj.items;\n                var legendItems = legend.items;\n                var map = {};\n                legendItems.map(function (item) {\n                  map[item.name] = JSON.parse(JSON.stringify(item));\n                });\n                tooltipItems.map(function (item) {\n                  var name = item.name,\n                      value = item.value;\n\n                  if (map[name]) {\n                    map[name].value = value;\n                  }\n                });\n                legend.setItems(Object.values(map));\n              },\n              onHide: function onHide() {\n                var VChart = _this.chart;\n                var legend = VChart.get('legendController').legends.top[0];\n                legend.setItems(VChart.getLegendItems().type);\n              }\n            };\n            this.tooltipOptions = _objectSpread(_objectSpread({}, this.tooltipOptions), customTooltip);\n          }\n\n          chart.tooltip(this.tooltipOptions);\n        } else {\n          chart.tooltip(false);\n        }\n      } else {\n        chart.tooltip({\n          showCrosshairs: !this.barOption\n        });\n      }\n\n      if (autoAlignXAxis) {\n        chart.axis(this.xField, {\n          label: function label(text, index, total) {\n            var textCfg = {};\n\n            if (index === 0) {\n              textCfg.textAlign = 'left';\n            }\n\n            if (index === total - 1) {\n              textCfg.textAlign = 'right';\n            }\n\n            return textCfg;\n          }\n        });\n      }\n\n      if (this.lineOptions) {\n        var _this$lineOptions = this.lineOptions,\n            shape = _this$lineOptions.shape,\n            adjust = _this$lineOptions.adjust,\n            size = _this$lineOptions.size;\n        var seriesField = this.lineOptions.seriesField || '';\n        var colors = this.buildColor(this.lineOptions.colors);\n        var rs = chart.line().position(this.buildPosition()).shape(shape);\n\n        if (size) {\n          rs.size(size);\n        }\n\n        if (!seriesField && colors) {\n          rs.color(colors);\n        }\n\n        if (seriesField) {\n          if (colors && colors.length) {\n            rs.color(seriesField, colors);\n          } else {\n            rs.color(seriesField);\n          }\n        }\n\n        if (adjust) {\n          rs.adjust(adjust);\n        }\n      }\n\n      if (this.guides.length) {\n        this.guides.forEach(function (guide) {\n          chart.guide()[guide.type](guide.options);\n        });\n      }\n\n      if (this.areaOptions) {\n        var _this$areaOptions = this.areaOptions,\n            _adjust = _this$areaOptions.adjust,\n            _seriesField = _this$areaOptions.seriesField;\n        var color = this.buildColor(this.areaOptions.colors);\n\n        var _rs = chart.area().position(this.buildPosition()).shape(this.areaOptions.shape || '');\n\n        if (!_seriesField && color) {\n          _rs.color(color);\n        } else {\n          _rs.color(_seriesField || '', color);\n        }\n\n        if (_adjust) {\n          _rs.adjust(_adjust);\n        }\n      }\n\n      if (this.barOptions) {\n        var _this$barOptions = this.barOptions,\n            _adjust2 = _this$barOptions.adjust,\n            _seriesField2 = _this$barOptions.seriesField;\n\n        var _color = this.buildColor(this.barOptions.colors);\n\n        var _rs2 = chart.interval().position(this.buildPosition());\n\n        if (!_seriesField2 && _color) {\n          _rs2.color(_color);\n        } else {\n          _rs2.color(_seriesField2 || '', _color);\n        }\n\n        if (_adjust2) {\n          _rs2.adjust(_adjust2);\n        }\n      }\n\n      ['x', 'y'].forEach(function (axis) {\n        if (_this2[\"\".concat(axis, \"AxisOptions\")]) {\n          chart.axis(_this2[\"\".concat(axis, \"Field\")], _this2[\"\".concat(axis, \"Field\")].disabled ? false : _this2[\"\".concat(axis, \"AxisOptions\")]);\n        }\n      });\n\n      if (this.pieOptions) {\n        chart.coord(this.pieOptions.coord, this.pieOptions);\n        chart.axis(false);\n        chart.interval().position('a*percent').color(this.pieOptions.seriesField, this.pieOptions.colors && this.pieOptions.colors.length ? this.pieOptions.colors : '').adjust('stack').style({\n          lineWidth: 1,\n          stroke: '#fff',\n          lineJoin: 'round',\n          lineCap: 'round'\n        }).animate({\n          appear: {\n            duration: 1200,\n            easing: 'bounceOut'\n          }\n        });\n      }\n\n      if (this.pointOptions) {\n        var _this$pointOptions = this.pointOptions,\n            _seriesField3 = _this$pointOptions.seriesField,\n            styles = _this$pointOptions.styles,\n            _shape = _this$pointOptions.shape,\n            _size = _this$pointOptions.size,\n            _colors = _this$pointOptions.colors;\n\n        var _rs3 = chart.point().position(this.buildPosition()).style(styles).shape(_shape);\n\n        var _color2 = this.buildColor(_colors);\n\n        if (!_seriesField3 && _color2) {\n          _rs3.color(_color2);\n        } else {\n          _rs3.color(_seriesField3 || '', _color2);\n        }\n\n        if (!_seriesField3 && _size) {\n          _rs3.size(_size);\n        } else {\n          _rs3.size(_seriesField3 || '', _size);\n        }\n      } // 在渲染前执触发on-render使之可以做自定义设置\n\n\n      this.$emit('on-render', {\n        chart: chart\n      });\n      chart.render();\n      this.chart = chart;\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$nextTick();\n\n            case 2:\n              this.render();\n              window.addEventListener('resize', this.render);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.render);\n    this.destroy();\n  }\n};",{"version":3,"sources":["/Users/apple/code/js/vue-cli-3-example/node_modules/vux/src/components/v-chart/v-chart.vue"],"names":["F2","props","width","Number","height","backgroundColor","type","String","default","data","Array","tooltip","Object","shape","preventRender","Boolean","preventDefault","xField","yField","hasPoint","pointStyle","guideTags","areaOptions","lineOptions","tooltipOptions","legendOptions","barOptions","pieOptions","guideOptions","pointOptions","xFieldOptions","yFieldOptions","guides","seriesField","xAxisOptions","yAxisOptions","autoAlignXAxis","undefined","computed","currentData","slice","map","item","a","currentXFieldOptions","val","defaultOptions","tickCount","range","test","assign","currentYFieldOptions","watch","changeData","methods","onTouchstart","e","set","name","options","chart","setField","axis","repaint","rerender","destroy","render","addGuide","push","setScale","x","y","setAxis","autoAlign","buildColor","c","color","isArray","ctx","$refs","getContext","createLinearGradient","window","innerWidth","forEach","addColorStop","setPie","setBar","setLegend","setTooltip","setArea","setGuide","setLine","setPoint","buildPosition","getFields","length","keys","indexes","type1","type2","_this","windowWidth","windowHeight","innerHeight","Chart","el","pixelRatio","$devicePixelRatio","devicePixelRatio","$attrs","$emit","source","scale","disabled","legend","showCrosshairs","showValueInLegend","customTooltip","custom","onChange","obj","get","legends","top","tooltipItems","items","legendItems","JSON","parse","stringify","value","setItems","values","onHide","VChart","getLegendItems","barOption","label","text","index","total","textCfg","textAlign","adjust","size","colors","rs","line","position","guide","area","interval","coord","style","lineWidth","stroke","lineJoin","lineCap","animate","appear","duration","easing","styles","point","mounted","$nextTick","addEventListener","beforeDestroy","removeEventListener"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n// const shapeMap = {\n//   point: ['circle', 'hollowCircle', 'rect'],\n//   line: ['line', 'smooth', 'dash'],\n//   area: ['area', 'smooth'],\n//   interval: ['rect'],\n//   polygon: ['polygon'],\n//   schema: ['candle']\n// }\n\nimport F2 from '@antv/f2'\n\nexport default {\n  props: {\n    width: Number,\n    height: Number,\n    backgroundColor: {\n      type: String,\n      default: '#fff'\n    },\n    data: {\n      type: Array\n    },\n    tooltip: {\n      type: Object\n    },\n    shape: {\n      type: String,\n      default: 'line'\n    },\n    preventRender: {\n      type: Boolean,\n      default: false\n    },\n    preventDefault: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      xField: '',\n      yField: '',\n      hasPoint: false,\n      pointStyle: {},\n\n      guideTags: [],\n\n      areaOptions: null,\n      lineOptions: null,\n      tooltipOptions: null,\n      legendOptions: null,\n\n      barOptions: null,\n\n      pieOptions: null,\n\n      guideOptions: null,\n\n      pointOptions: null,\n\n      xFieldOptions: {},\n      yFieldOptions: {},\n\n      guides: [],\n\n      seriesField: '',\n\n      xAxisOptions: null,\n      yAxisOptions: null,\n\n      autoAlignXAxis: undefined\n    }\n  },\n  computed: {\n    currentData () {\n      if (this.pieOptions) {\n        return this.data.slice().map(item => {\n          item.a = '1'\n          return item\n        })\n      }\n      return this.data\n    },\n    currentXFieldOptions (val) {\n      const defaultOptions = {\n        tickCount: 5\n      }\n      if (!this.barOptions) {\n        defaultOptions.range = [0, 1]\n      } else {\n        defaultOptions.tickCount = 0\n      }\n      // auto detect if is timeCat\n      if (!this.xFieldOptions) {\n        if (/\\d{4}-\\d{2}-\\d{2}/.test(this.data[0][this.xField])) {\n          return Object.assign({}, defaultOptions, {\n            type: 'timeCat',\n            tickCount: 3\n          })\n        } else {\n          return defaultOptions\n        }\n      }\n\n      return Object.assign({}, defaultOptions, this.xFieldOptions)\n    },\n    currentYFieldOptions (val) {\n      const defaultOptions = {\n        tickCount: 5\n      }\n      if (!val) {\n        return defaultOptions\n      }\n\n      return Object.assign({}, defaultOptions, this.yFieldOptions)\n    }\n  },\n  watch: {\n    data () {\n      this.changeData(this.data)\n    }\n  },\n  methods: {\n    onTouchstart (e) {\n      this.preventDefault && e.preventDefault()\n    },\n    set (name, options) {\n      this[`${name}Options`] = options\n    },\n    changeData (data) {\n      this.chart && this.chart.changeData(data)\n    },\n    setField (axis, item) {\n      this[`${axis}Field`] = item\n    },\n    repaint () {\n      this.chart.repaint()\n    },\n    rerender () {\n      this.destroy()\n      this.render()\n    },\n    destroy () {\n      this.chart && this.chart.destroy()\n    },\n    addGuide (options) {\n      this.guides.push(options)\n    },\n    setScale (options) {\n      if (options.x) {\n        this.xFieldOptions = options.x\n      }\n      if (options.y) {\n        this.yFieldOptions = options.y\n      }\n    },\n    setAxis (options) {\n      if (options.x) {\n        this.xAxisOptions = options\n        if (typeof options.autoAlign !== 'undefined') {\n          this.autoAlignXAxis = options.autoAlign\n        }\n      }\n      if (options.y) {\n        this.yAxisOptions = options\n      }\n    },\n    buildColor (c) {\n      let color = c || ''\n      if (Array.isArray(c) && Array.isArray(c[0])) {\n        const ctx = this.$refs.chart.getContext('2d')\n        color = ctx.createLinearGradient(0, 0, window.innerWidth, 0)\n        c.forEach(c => {\n          color.addColorStop(c[0], c[1])\n        })\n      }\n      return color\n    },\n    setPie (options = {}) {\n      this.pieOptions = options\n    },\n    setBar (options = {}) {\n      this.barOptions = options\n    },\n    setLegend (options) {\n      this.legendOptions = options\n    },\n    setTooltip (options) {\n      this.tooltipOptions = options\n    },\n    setArea (options) {\n      this.areaOptions = options\n    },\n    setGuide (options) {\n      this.guideOptions = options\n    },\n    setLine (options) {\n      this.lineOptions = options\n    },\n    setPoint (options) {\n      this.pointOptions = options\n    },\n    buildPosition () {\n      return `${this.xField}*${this.yField}`\n    },\n    getFields () {\n      if (this.xField && this.yField) {\n        return\n      }\n\n      if (this.data && this.data.length) {\n        const keys = Object.keys(this.data[0])\n        if (keys.length >= 2) {\n          let indexes = [0, 1]\n          const type1 = typeof this.data[0][keys[0]]\n          const type2 = typeof this.data[0][keys[1]]\n          if (type1 === 'number' && type2 !== 'number') {\n            indexes = [1, 0]\n          } else if (type1 === 'string' && type2 === 'string' && keys[2] === 'value') {\n            indexes = [0, 2]\n          }\n          this.xField = keys[indexes[0]]\n          this.yField = keys[indexes[1]]\n        }\n      }\n    },\n    render () {\n      const _this = this\n      let autoAlignXAxis = this.autoAlignXAxis\n      if (this.barOptions) {\n        autoAlignXAxis = false\n      }\n      if (typeof autoAlignXAxis === 'undefined') {\n        autoAlignXAxis = true\n      }\n      const windowWidth = window.innerWidth\n      const windowHeight = window.innerHeight\n      const chart = new F2.Chart({\n        el: this.$refs.chart,\n        width: this.width || windowWidth,\n        height: this.height ? this.height : (windowWidth > windowHeight ? (windowHeight - 54) : windowWidth * 0.707),\n        pixelRatio: this.$devicePixelRatio || window.devicePixelRatio,\n        ...this.$attrs\n      })\n      if (this.preventRender) {\n        this.$emit('on-render', { chart })\n        return\n      }\n\n      if (!this.data || !this.data.length) {\n        return\n      }\n\n      this.getFields()\n\n      chart.source(this.currentData)\n\n      chart.scale(this.xField, this.currentXFieldOptions)\n      chart.scale(this.yField, this.currentYFieldOptions)\n\n      if (this.legendOptions) {\n        if (this.legendOptions.disabled) {\n          chart.legend(false)\n        } else {\n          chart.legend(this.legendOptions)\n        }\n      }\n\n      if (this.tooltipOptions) {\n        if (this.barOptions) {\n          this.tooltipOptions.showCrosshairs = false\n        }\n        if (!this.tooltipOptions.disabled) {\n          // handle show-value-in-legend\n          if (this.tooltipOptions.showValueInLegend) {\n            const customTooltip = {\n              custom: true, // 自定义 tooltip 内容框\n              onChange: function (obj) {\n                const legend = _this.chart.get('legendController').legends.top[0]\n                const tooltipItems = obj.items\n                const legendItems = legend.items\n                const map = {}\n                legendItems.map(item => {\n                  map[item.name] = JSON.parse(JSON.stringify(item))\n                })\n                tooltipItems.map(item => {\n                  const { name, value } = item\n                  if (map[name]) {\n                    map[name].value = value\n                  }\n                })\n                legend.setItems(Object.values(map))\n              },\n              onHide: function () {\n                const VChart = _this.chart\n                const legend = VChart.get('legendController').legends.top[0]\n                legend.setItems(VChart.getLegendItems().type)\n              }\n            }\n            this.tooltipOptions = {\n              ...this.tooltipOptions,\n              ...customTooltip\n            }\n          }\n          chart.tooltip(this.tooltipOptions)\n        } else {\n          chart.tooltip(false)\n        }\n      } else {\n        chart.tooltip({\n          showCrosshairs: !this.barOption\n        })\n      }\n\n      if (autoAlignXAxis) {\n        chart.axis(this.xField, {\n          label (text, index, total) {\n            const textCfg = {}\n            if (index === 0) {\n              textCfg.textAlign = 'left'\n            }\n            if (index === total - 1) {\n              textCfg.textAlign = 'right'\n            }\n            return textCfg\n          }\n        })\n      }\n\n      if (this.lineOptions) {\n        const { shape, adjust, size } = this.lineOptions\n        let seriesField = this.lineOptions.seriesField || ''\n        let colors = this.buildColor(this.lineOptions.colors)\n        let rs = chart.line().position(this.buildPosition()).shape(shape)\n\n        if (size) {\n          rs.size(size)\n        }\n\n        if (!seriesField && colors) {\n          rs.color(colors)\n        }\n        if (seriesField) {\n          if (colors && colors.length) {\n            rs.color(seriesField, colors)\n          } else {\n            rs.color(seriesField)\n          }\n        }\n        if (adjust) {\n          rs.adjust(adjust)\n        }\n      }\n\n      if (this.guides.length) {\n        this.guides.forEach(guide => {\n          chart.guide()[guide.type](guide.options)\n        })\n      }\n\n      if (this.areaOptions) {\n        const { adjust, seriesField } = this.areaOptions\n        let color = this.buildColor(this.areaOptions.colors)\n        let rs = chart.area().position(this.buildPosition()).shape(this.areaOptions.shape || '')\n        if (!seriesField && color) {\n          rs.color(color)\n        } else {\n          rs.color(seriesField || '', color)\n        }\n\n        if (adjust) {\n          rs.adjust(adjust)\n        }\n      }\n\n      if (this.barOptions) {\n        const { adjust, seriesField } = this.barOptions\n        let color = this.buildColor(this.barOptions.colors)\n        let rs = chart.interval().position(this.buildPosition())\n        if (!seriesField && color) {\n          rs.color(color)\n        } else {\n          rs.color(seriesField || '', color)\n        }\n\n        if (adjust) {\n          rs.adjust(adjust)\n        }\n      }\n\n      ['x', 'y'].forEach(axis => {\n        if (this[`${axis}AxisOptions`]) {\n          chart.axis(this[`${axis}Field`], this[`${axis}Field`].disabled ? false : this[`${axis}AxisOptions`])\n        }\n      })\n\n      if (this.pieOptions) {\n        chart.coord(this.pieOptions.coord, this.pieOptions)\n        chart.axis(false)\n        chart.interval()\n        .position('a*percent')\n        .color(this.pieOptions.seriesField, (this.pieOptions.colors && this.pieOptions.colors.length) ? this.pieOptions.colors : '')\n        .adjust('stack')\n        .style({\n          lineWidth: 1,\n          stroke: '#fff',\n          lineJoin: 'round',\n          lineCap: 'round'\n        })\n        .animate({\n          appear: {\n            duration: 1200,\n            easing: 'bounceOut'\n          }\n        })\n      }\n\n      if (this.pointOptions) {\n        const { seriesField, styles, shape, size, colors } = this.pointOptions\n        let rs = chart.point().position(this.buildPosition()).style(styles).shape(shape)\n\n        let color = this.buildColor(colors)\n        if (!seriesField && color) {\n          rs.color(color)\n        } else {\n          rs.color(seriesField || '', color)\n        }\n\n        if (!seriesField && size) {\n          rs.size(size)\n        } else {\n          rs.size(seriesField || '', size)\n        }\n      }\n\n      // 在渲染前执触发on-render使之可以做自定义设置\n      this.$emit('on-render', { chart })\n      chart.render()\n      this.chart = chart\n    }\n  },\n  async mounted () {\n    await this.$nextTick()\n    this.render()\n    window.addEventListener('resize', this.render)\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.render)\n    this.destroy()\n  }\n}\n"]}]}